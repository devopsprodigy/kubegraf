{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./common/constants.ts","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///external \"app/core/app_events\"","webpack:///external \"@grafana/data\"","webpack:///external \"app/core/utils/kbn\"","webpack:///external \"@grafana/runtime\"","webpack:///./common/store.ts","webpack:///./common/types/traits/baseModel.ts","webpack:///./common/types/pod.ts","webpack:///./common/proxies/prometheusProxy.ts","webpack:///./common/types/component.ts","webpack:///./common/types/service.ts","webpack:///./common/types/job.ts","webpack:///./common/types/cronjob.ts","webpack:///./common/types/namespace.ts","webpack:///./common/types/deployment.ts","webpack:///./common/types/statefulset.ts","webpack:///./common/types/daemonset.ts","webpack:///./common/helpers.ts","webpack:///./common/types/node.ts","webpack:///./components/k8s-page.ts","webpack:///./components/applications-overview/applications-overview.ts","webpack:///./components/clusters-list/clusters-list.ts","webpack:///./components/cluster-config/cluster-config.ts","webpack:///./components/cluster-overview/cluster-overview.ts","webpack:///./components/nodes-overview/nodes-overview.ts","webpack:///./components/cluster-alerts/cluster-alerts.ts","webpack:///./config/config.ts","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ERROR","WARNING","TERMINATING","SUCCESS","SUCCEEDED","COLOR_YELLOW","COLOR_RED","COLOR_GREEN","PODS_LIMIT","TYPE_PROMETHEUS","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","length","push","__values","__read","ar","error","__spread","arguments","concat","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","window","localStorage","set","getBool","def","exists","getObject","ret","json","JSON","parse","setObject","stringify","removeItem","data","metadata","is_deleted","open","limit","update","destroy","toggle","showAllPods","eventMessage","metrics","cpuUsed","memoryUsed","cpuRequested","memoryRequested","cpuLimit","memoryLimit","sourceMetrics","used","deletionTimestamp","status","phase","conditionStatus","containerStatuses","initContainerStatuses","conditions","filter","item","ready","message","state","waiting","reason","undefined","type","msg","min","max","ds","__getLastNonNullValue","fields","datapoints","skiper","valueField","row","vArr","values","buffer","point","__getName","query","target","substring","legend","debug","range","from","subtract","to","targets","expr","format","legendFormat","interval","res","toPromise","formData","map","datapoint","pods","jobs","deployments","statefulsets","daemonsets","other","sort","namespaceStore","index","findIndex","services","bytes","valueFormats","__roundCpu","cpu","parseFloat","toFixed","__convertToMicro","__percentUsed","allocatable","__getGrafanaVersion","version","grafanaBootData","settings","buildInfo","split","namespaces","podsCount","cpuIndicate","memoryIndicate","podsIndicate","cpuRequestedIndicate","memoryRequestedIndicate","podsRequestedIndicate","cpuLimitIndicate","memoryLimitIndicate","nsListState","hideNs","nodeStore","reduce","accumulator","currentValue","indexOf","parseInt","__getStatus","__getStatusRequested","__getStatusLimit","__getBytes","memory","addresses","address","capacity","percent","__getColor","cpuStatus","cpuStatusRequested","cpuLimitStatus","memoryStatus","memoryStatusRequested","memoryLimitStatus","podsStatus","podsStatusRequested","parseMetrics","cpuReq","memoryReq","currentStatus","__getLastMetric","__getLastMetricByInstance","setMetricIndicated","metricStatus","setTimeout","includes","hostIp","str","__parseInt","diff","requested","$scope","backendSrv","datasourceSrv","contextSrv","$location","timeout","$q","$window","nodesMapReady","storePods","storeEvents","storeComponents","storeServices","storeJobs","storeCronJobs","storeDeployments","storeStatefulSets","storeDaemonSets","namespaceMap","nodesMap","nodesError","podsError","componentsError","orgId","showMenu","pageReady","location","user","isAdmin","hasRole","search","document","title","elem","querySelector","scrollToTop","scrollTo","top","left","scrollLeft","behavior","a","emit","updatePods","__getServersInfo","nodes","info","instance","node","join","all","prometheusDS","seconds","find","element","cpuCores","ramTotal","swapTotal","rootFSTotal","sysLoad","uptime","getNodeDashboardLink","dbUrl","cluster","getPodDashboardLink","pod","namespace","getEntityDashboardLink","entity","entityName","getNodeMap","withoutPods","_promises","getNodes","getPods","insertPodsToNodesMap","getPodsMetrics","refreshNodes","refreshRate","getResourcesMetrics","__getCpuMetricsRequested","__getMemoryMetricsRequested","__getPodsCountMetrics","__getCpuMetricsUsed","__getMemoryMetricsUsed","__getCpuLimitMetrics","__getMemoryLimitMetrics","results","forEach","getStore","nd","Error","__getPodsUsedCpu","__getPodsUsedMemory","__getPodsRequestedCpu","__getPodsRequestedMemory","__getPodsLimitCpu","__getPodsLimitMemory","mem","memReq","memLimit","hostIP","issetNode","equalNode","uid","getNamespaceMap","getNamespaces","attachDeployments","attachStatefulsets","attachDaemonsets","getClusterCronJobs","getClusterJobs","attachJobs","attachCronJobs","_psPromises","getAllServices","attachPodsToMap","namespaceMapReady","refreshNamespaceMap","every","storeIndex","splice","refreshDeployments","refreshStatefulsets","refreshDaemonsets","refreshJobs","getDeployments","deploy","_ns","__getNamespace","newDeployments","deployment","issetDeployment","equalDeployment","newDeployment","getStatefulsets","ss","Statefulsets","statefulset","issetStatefulset","equalStatefulset","newStatefulset","getDaemonsets","Daemonsets","daemonset","issetDaemonSet","equalDaemonSet","newDaemonset","jobsList","job","ownerReferences","cron","cj","kind","cronJobs","__findPodsBySelector","spec","selector","matchLabels","__findServices","labels","updateJobs","prop","__prepareDS","clusterName","__setRefreshRate","getPrometheusDS","prometheus","skipEmptyHost","refreshPods","issetPod","equalPod","getClusterComponents","getComponents","components","component","refreshClusterComponents","getServices","service","getJobs","getCronJobs","cronjobs","cronjob","newJobs","issetJob","newJob","rate","__getPodsLength","getWarningPods","warningPods","podIsWarning","event","involvedObject","sortByStatus","array","rule","sorted","getWarningNodes","goTo","id","getElementsByClassName","scrollIntoView","block","getAlertsNodesByCPU","getAlertsNodesByMemory","getAlertsNodesByPods","getAlertsComponents","getEvents","events","validResources","containers","container","msgCpu","msgMemory","resources","requests","limits","toggleMenu","$injector","$timeout","storageOpenKey","storageShowColumnKey","showScrollButton","columnNames","colName","nsKey","hideAllWarningPods","openFromStorage","getItem","showColumnFromStorage","showColumn","addEventListener","scrollTop","$apply","__showAll","toggleNamespace","__hideAll","namespaceClick","ctrlKey","metaKey","preventDefault","newPods","toggleAllWarningPods","namespaceFilterIsDeleted","namespaceCount","namespaceActiveCount","toggleTab","setItem","toggleColumn","columnName","showCheck","$inject","templateUrl","utilSrv","isReady","getClusters","getAll","datasources","isArray","clusters","keys","deleteCluster","text","yesText","icon","onConfirm","confirmDelete","alertSrv","retry","busy","getCluster","getDatasource","clusterId","access","jsonData","refresh_pods_rate","access_via_token","prom_name","getPrometheusList","prometheusList","defProm","saveCluster","cluster_url","url","saveDatasource","datasource","testCluster","check","clusterForm","$valid","updateDatasource","createDatasource","post","err","put","_url","datasourceRequest","method","headers","response","history","back","statusText","href","serverInfo","getServerInfo","showAllPodsNS","toggleNsList","summary","metric","prevValue","nodeClick","toggleNodes","podsFilterIsDeleted","nsIndex","nodeIndex","nodeCount","nodeActiveCount","nodeName","getAlertsNodesByCPU2","getAlertsNodesByResources","resourceProblem","statusColor","statusForSort","statusMessage","nodeMessages","clusterProblem","warnings","some","w","messages","cpuPercentUsed","cpuPercentRequested","memoryPercentUsed","podsPercentUsed","enabled","appEditCtrl","setPostUpdateHook","postUpdate","appModel","importDashboards","dark","light"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","const ERROR = 3;\nconst WARNING = 2;\nconst TERMINATING = 1;\nconst SUCCESS = 0;\nconst SUCCEEDED = 4;\n\nconst COLOR_YELLOW = '#ffff0096';\nconst COLOR_RED = '#a52a2a';\nconst COLOR_GREEN = '#299c46';\n\nconst PODS_LIMIT = 10;\n\nconst TYPE_PROMETHEUS = 'prometheus';\n\nexport {\n  ERROR,\n  WARNING,\n  TERMINATING,\n  SUCCESS,\n  SUCCEEDED,\n  COLOR_YELLOW,\n  COLOR_RED,\n  COLOR_GREEN,\n  PODS_LIMIT,\n  TYPE_PROMETHEUS,\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","export class Store {\n  get(key: string) {\n    return window.localStorage[key];\n  }\n\n  set(key: string, value: any) {\n    window.localStorage[key] = value;\n  }\n\n  getBool(key: string, def: any) {\n    if (def !== void 0 && !this.exists(key)) {\n      return def;\n    }\n    return window.localStorage[key] === 'true';\n  }\n\n  getObject(key: string, def?: any) {\n    let ret = def;\n    if (this.exists(key)) {\n      const json = window.localStorage[key];\n      try {\n        ret = JSON.parse(json);\n      } catch (error) {\n        console.error(`Error parsing store object: ${key}. Returning default: ${def}. [${error}]`);\n      }\n    }\n    return ret;\n  }\n\n  // Returns true when successfully stored\n  setObject(key: string, value: any): boolean {\n    let json;\n    try {\n      json = JSON.stringify(value);\n    } catch (error) {\n      console.error(`Could not stringify object: ${key}. [${error}]`);\n      return false;\n    }\n    try {\n      this.set(key, json);\n    } catch (error) {\n      // Likely hitting storage quota\n      console.error(`Could not save item in localStorage: ${key}. [${error}]`);\n      return false;\n    }\n    return true;\n  }\n\n  exists(key: string) {\n    return window.localStorage[key] !== void 0;\n  }\n\n  delete(key: string) {\n    window.localStorage.removeItem(key);\n  }\n}\n\nexport const store = new Store();\nexport default store;\n","import { PODS_LIMIT } from '../../constants';\nexport class BaseModel {\n  name: string;\n  data: any;\n  is_deleted: boolean;\n  open: boolean;\n  limit: number | boolean;\n\n  constructor(data) {\n    this.name = data.metadata.name;\n    this.data = data;\n    this.is_deleted = false;\n    this.open = true;\n    this.limit = PODS_LIMIT;\n  }\n\n  update(data) {\n    this.name = data.metadata.name;\n    this.data = data;\n  }\n\n  destroy() {\n    this.is_deleted = true;\n  }\n\n  toggle() {\n    this.open = !this.open;\n  }\n\n  showAllPods() {\n    this.limit = false;\n  }\n}\n","import { ERROR, SUCCEEDED, SUCCESS, TERMINATING, WARNING } from '../constants';\nimport { BaseModel } from './traits/baseModel';\n\nexport class Pod extends BaseModel {\n  metrics: {\n    cpuUsed: number | string;\n    memoryUsed: number | string;\n    cpuRequested: number | string;\n    memoryRequested: number | string;\n    cpuLimit: number | string;\n    memoryLimit: number | string;\n  };\n  sourceMetrics: {\n    cpuUsed: number;\n    memoryUsed: number;\n    cpuRequested: number;\n    memoryRequested: number;\n    cpuLimit: number;\n    memoryLimit: number;\n  };\n  used: boolean;\n  private eventMessage: string = null;\n\n  constructor(data) {\n    super(data);\n    this.metrics = {\n      cpuUsed: 'N-A',\n      memoryUsed: 'N-A',\n      cpuRequested: 'N-A',\n      memoryRequested: 'N-A',\n      cpuLimit: 'N-A',\n      memoryLimit: 'N-A',\n    };\n    this.sourceMetrics = {\n      cpuUsed: null,\n      memoryUsed: null,\n      cpuRequested: null,\n      memoryRequested: null,\n      cpuLimit: null,\n      memoryLimit: null,\n    };\n    this.used = false;\n  }\n\n  get status() {\n    if (this.data.metadata.deletionTimestamp) {\n      return TERMINATING;\n    } else if (this.data.status.phase === 'Running') {\n      let conditionStatus;\n      let containerStatuses;\n      let initContainerStatuses;\n\n      if (this.data.status.conditions) {\n        conditionStatus = this.data.status.conditions.filter((item) => item.status === 'False');\n        conditionStatus.length > 0 ? (conditionStatus = true) : (conditionStatus = false);\n      }\n      if (this.data.status.containerStatuses) {\n        containerStatuses = this.data.status.containerStatuses.filter((item) => item.ready === false);\n        containerStatuses.length > 0 ? (containerStatuses = true) : (containerStatuses = false);\n      }\n      if (this.data.status.initContainerStatuses) {\n        initContainerStatuses = this.data.status.initContainerStatuses.filter((item) => item.ready === false);\n        initContainerStatuses.length > 0 ? (initContainerStatuses = true) : (initContainerStatuses = false);\n      }\n      if (conditionStatus || containerStatuses || initContainerStatuses) {\n        return ERROR;\n      } else {\n        return SUCCESS;\n      }\n    } else {\n      switch (this.data.status.phase) {\n        case 'Pending':\n          return WARNING;\n        case 'Succeeded':\n          return SUCCEEDED;\n        case 'Failed':\n          return ERROR;\n        case 'Unknown':\n          return ERROR;\n        default:\n          return ERROR;\n      }\n    }\n  }\n\n  get color() {\n    switch (this.status) {\n      case ERROR:\n        return 'error';\n      case WARNING:\n        return 'warning';\n      case TERMINATING:\n        return 'terminating';\n      case SUCCESS:\n        return 'success';\n      case SUCCEEDED:\n        return 'succeeded';\n      default:\n        return 'success';\n    }\n  }\n\n  get message() {\n    if (this.eventMessage) {\n      return this.eventMessage;\n    }\n\n    let status = this.status;\n    let data = this.data;\n    let phase = this.data.status.phase;\n    let message = 'Pod is ' + phase;\n    if (status === ERROR) {\n      if (data.status.containerStatuses) {\n        let d = data.status.containerStatuses.filter((item) => item.ready === false)[0];\n        if (d && d.state && d.state.waiting) {\n          if (d.state.waiting.message && d.state.waiting.reason) {\n            message = d.state.waiting.reason + '. ' + d.state.waiting.message;\n            return message;\n          }\n        }\n      } else if (data.status.conditions) {\n        let d = data.status.conditions.filter(\n          (item) => item.ready === false || (item.type === 'PodScheduled' && item.status === 'False')\n        )[0];\n        if (d !== undefined) {\n          return d.message;\n        }\n      } else if (data.status.message) {\n        return data.status.message;\n      }\n      return 'Undefined error';\n    } else {\n      if (this.data.metadata.deletionTimestamp) {\n        return 'Pod is Terminating';\n      } else if (phase === 'Running' || phase === 'Succeeded') {\n        return 'Pod is ' + phase;\n      } else {\n        if (data.status.containerStatuses) {\n          let d = data.status.containerStatuses.filter((item) => item.ready === false)[0];\n          if (d.state.waiting.message && d.state.waiting.message.length > 0) {\n            message = d.state.waiting.message;\n          }\n        } else if (data.status.conditions) {\n          let d = data.status.conditions.filter(\n            (item) => item.ready === false || (item.type === 'PodScheduled' && item.status === 'False')\n          )[0];\n          if (d !== undefined) {\n            message = d.message;\n          }\n        } else if (data.status.message) {\n          message = data.status.message;\n        }\n        return message;\n      }\n    }\n  }\n\n  set message(msg) {\n    this.eventMessage = msg;\n  }\n\n  get NaMessage() {\n    return 'Prometheus metrics unavailable';\n  }\n\n  get usageCpuColor() {\n    if (this.sourceMetrics.cpuUsed === null) {\n      return '';\n    }\n\n    if (this.sourceMetrics.cpuRequested && this.sourceMetrics.cpuLimit) {\n      const min =\n        (this.sourceMetrics.cpuLimit - this.sourceMetrics.cpuRequested) * 0.5 + this.sourceMetrics.cpuRequested;\n      const max =\n        (this.sourceMetrics.cpuLimit - this.sourceMetrics.cpuRequested) * 0.8 + this.sourceMetrics.cpuRequested;\n\n      if (this.sourceMetrics.cpuUsed < min) {\n        return 'green';\n      } else if (this.sourceMetrics.cpuUsed >= max) {\n        return 'red';\n      } else {\n        return 'yellow';\n      }\n    }\n    return 'red';\n  }\n\n  get usageMemoryColor() {\n    if (this.sourceMetrics.memoryUsed === null) {\n      return '';\n    }\n\n    if (this.sourceMetrics.memoryRequested && this.sourceMetrics.memoryLimit) {\n      const min =\n        (this.sourceMetrics.memoryLimit - this.sourceMetrics.memoryRequested) * 0.5 +\n        this.sourceMetrics.memoryRequested;\n      const max =\n        (this.sourceMetrics.memoryLimit - this.sourceMetrics.memoryRequested) * 0.8 +\n        this.sourceMetrics.memoryRequested;\n\n      if (this.sourceMetrics.memoryUsed < min) {\n        return 'green';\n      } else if (this.sourceMetrics.memoryUsed >= max) {\n        return 'red';\n      } else {\n        return 'yellow';\n      }\n    }\n\n    return 'red';\n  }\n}\n","//import moment from \"moment\";\nimport { dateTime } from '@grafana/data';\n\nexport class PrometheusProxy {\n  ds: any;\n  version: any;\n\n  constructor(ds) {\n    this.ds = ds;\n  }\n\n  query(query: any, debug = false) {\n    let body = {\n      //range: { from: moment().subtract(2, \"minute\"), to: moment() },\n      range: { from: dateTime().subtract(2, 'minute'), to: dateTime() },\n      targets: [{ expr: query.expr, format: 'time_series' }],\n      legendFormat: '{{' + query.legend + '}}',\n      interval: '15s',\n    };\n\n    let res = this.ds.query(body);\n    if (typeof res.then !== 'function') {\n      res = res.toPromise();\n    }\n\n    return res.then((res) => {\n      if (res && res.data) {\n        return this.formData(res.data, query, debug);\n      } else {\n        return {};\n      }\n    });\n  }\n\n  formData(data, query, debug = false) {\n    return data.map((item) => {\n      if (debug) {\n        console.log(item);\n      }\n\n      return {\n        target: this.__getName(item, query),\n        datapoint: this.__getLastNonNullValue(item),\n      };\n    });\n  }\n\n  __getLastNonNullValue = (item) => {\n    if (item.fields) {\n      let valueField = item.fields.filter((row) => {\n        return row.name && row.name === 'Value';\n      });\n\n      if (valueField) {\n        let vArr = valueField[0].values.buffer.filter((point) => point != null);\n        let value = vArr[vArr.length - 1];\n        if (value == null) {\n          console.log(item);\n        }\n        return value;\n      }\n    } else if (item.datapoints) {\n      let skiper = item.datapoints.filter((item) => item[0] != null);\n      return skiper[skiper.length - 1][0];\n    } else {\n      return 0;\n    }\n  };\n\n  __getName = (item, query) => {\n    if (item.target !== undefined) {\n      return item.target.substring(query.legend.length + 3, item.target.length - 2);\n    }\n\n    if (item.name !== undefined) {\n      return item.name.substring(query.legend.length + 3, item.name.length - 2);\n    }\n  };\n}\n","import { BaseModel } from '../../common/types/traits/baseModel';\nimport { ERROR, SUCCESS, COLOR_RED, COLOR_GREEN } from '../../common/constants';\n\nexport class Component extends BaseModel {\n  constructor(data) {\n    super(data);\n  }\n\n  get status() {\n    let type = this.data.conditions.filter((item) => item.type === 'Healthy')[0];\n\n    if (type !== undefined && type.status === 'True') {\n      return SUCCESS;\n    } else {\n      return ERROR;\n    }\n  }\n\n  get color() {\n    switch (this.status) {\n      case SUCCESS:\n        return COLOR_GREEN;\n      case ERROR:\n        return COLOR_RED;\n      default:\n        return;\n    }\n  }\n\n  get message() {\n    let conditions = this.data.conditions;\n\n    if (conditions) {\n      let message = conditions.filter((item) => item.type === 'Healthy')[0];\n      return message && message.message;\n    }\n  }\n}\n","import { BaseModel } from '../../common/types/traits/baseModel';\n\nexport class Service extends BaseModel {\n  constructor(data) {\n    super(data);\n  }\n}\n","import { Pod } from '../../common/types/pod';\nimport { BaseModel } from '../../common/types/traits/baseModel';\n\nexport class Job extends BaseModel {\n  pods: Pod[];\n\n  constructor(data) {\n    super(data);\n    this.pods = [];\n  }\n}\n","import { Job } from '../../common/types/job';\nimport { BaseModel } from '../../common/types/traits/baseModel';\n\nexport class Cronjob extends BaseModel {\n  jobs: Job[];\n\n  constructor(data) {\n    super(data);\n    this.jobs = [];\n  }\n}\n","import { Deployment } from './deployment';\nimport { Statefulset } from './statefulset';\nimport { Daemonset } from './daemonset';\nimport store from '../../common/store';\nimport { Pod } from '../../common/types/pod';\nimport { Job } from '../../common/types/job';\nimport { Cronjob } from '../../common/types/cronjob';\nimport { BaseModel } from '../../common/types/traits/baseModel';\n\nexport class Namespace extends BaseModel {\n  deployments: Deployment[];\n  statefulsets: Statefulset[];\n  daemonsets: Daemonset[];\n  other: Array<{ pods: Pod[] }>;\n  jobs: Job[];\n  cronJobs: Cronjob[];\n  sort: string;\n\n  constructor(data) {\n    super(data);\n    this.deployments = [];\n    this.statefulsets = [];\n    this.daemonsets = [];\n    this.other = [{ pods: [] }];\n    this.sort = 'name';\n  }\n\n  toggle() {\n    super.toggle();\n    let namespaceStore = store.getObject('namespaceStore');\n    let index = namespaceStore.findIndex((item) => item.name === this.name);\n    if (index || index === 0) {\n      namespaceStore[index].open = this.open;\n    }\n    store.setObject('namespaceStore', namespaceStore);\n  }\n}\n","import { Pod } from './pod';\nimport { Service } from './service';\nimport { BaseModel } from './traits/baseModel';\n\nexport class Deployment extends BaseModel {\n  pods: Pod[];\n  services: Service[];\n\n  constructor(data: any) {\n    super(data);\n    this.pods = [];\n    this.services = [];\n  }\n}\n","import { Pod } from './pod';\nimport { Service } from './service';\nimport { BaseModel } from '../../common/types/traits/baseModel';\n\nexport class Statefulset extends BaseModel {\n  pods: Pod[];\n  services: Service[];\n\n  constructor(data: any) {\n    super(data);\n    this.pods = [];\n  }\n}\n","import { Pod } from './pod';\nimport { Service } from './service';\nimport { BaseModel } from '../../common/types/traits/baseModel';\n\nexport class Daemonset extends BaseModel {\n  pods: Pod[];\n  services: Service[];\n\n  constructor(data: any) {\n    super(data);\n    this.pods = [];\n  }\n}\n","import { Pod } from './types/pod';\nimport kbn from 'grafana/app/core/utils/kbn';\n\nlet __prepare = (items) => {\n  return items.map((item) => {\n    return {\n      name: item.metadata.name,\n      data: item,\n    };\n  });\n};\n\nlet __preparePods = (pods) => {\n  return pods.map((item) => {\n    return new Pod(item);\n  });\n};\n\nlet __convertToGB = (bytes) => {\n  return kbn.valueFormats['bytes'](bytes, 3, null);\n};\n\nlet __convertToHours = (seconds) => {\n  return kbn.valueFormats['ms'](seconds, 1, null);\n};\n\nlet __roundCpu = (cpu) => {\n  return parseFloat(cpu).toFixed(3);\n};\n\nlet __convertToMicro = (cpu) => {\n  return cpu * 1000 + 'm';\n};\n\nlet __getLastNonNullValue = (dataset) => {\n  if (dataset) {\n    let skiper = dataset.filter((item) => item[0] != null);\n    return skiper[skiper.length - 1][0];\n  }\n};\n\nlet __percentUsed = (used, allocatable) => {\n  return ((parseFloat(used) / parseFloat(allocatable)) * 100).toFixed(2) + '%';\n};\n\nconst __getGrafanaVersion = (window) => {\n  let version = 5;\n\n  try {\n    version = window.grafanaBootData.settings.buildInfo.version.split('.')[0];\n  } catch (e) {\n    console.error(e);\n  }\n\n  return version;\n};\n\nexport {\n  __prepare,\n  __preparePods,\n  __convertToGB,\n  __roundCpu,\n  __percentUsed,\n  __convertToMicro,\n  __getLastNonNullValue,\n  __getGrafanaVersion,\n  __convertToHours,\n};\n","import { Pod } from './pod';\nimport { __convertToGB, __roundCpu, __percentUsed, __getLastNonNullValue } from '../helpers';\nimport store from '../../common/store';\nimport { BaseModel } from '../../common/types/traits/baseModel';\nimport { ERROR, SUCCESS, WARNING, COLOR_YELLOW, COLOR_RED, COLOR_GREEN } from '../constants';\n\nexport class Node extends BaseModel {\n  hideNs: boolean;\n  namespaces: Array<{\n    name: string;\n    limit: number | boolean;\n    pods: Pod[];\n    sort: string;\n  }>;\n  metrics: {\n    cpuRequested: number | string;\n    memoryRequested: number | string;\n    cpuUsed: number | string;\n    memoryUsed: number | string;\n    podsCount: number | string;\n    cpuLimit: number | string;\n    memoryLimit: number | string;\n  };\n\n  cpuIndicate: boolean;\n  memoryIndicate: boolean;\n  podsIndicate: boolean;\n  cpuRequestedIndicate: boolean;\n  memoryRequestedIndicate: boolean;\n  podsRequestedIndicate: boolean;\n  cpuLimitIndicate: boolean;\n  memoryLimitIndicate: boolean;\n\n  constructor(data) {\n    super(data);\n    this.namespaces = [];\n    this.metrics = {\n      cpuUsed: 'N/A',\n      memoryUsed: 'N/A',\n      podsCount: 'N/A',\n      cpuRequested: 'N/A',\n      memoryRequested: 'N/A',\n      cpuLimit: 'N/A',\n      memoryLimit: 'N/A',\n    };\n    this.cpuIndicate = false;\n    this.memoryIndicate = false;\n    this.podsIndicate = false;\n    this.cpuRequestedIndicate = false;\n    this.memoryRequestedIndicate = false;\n    this.podsRequestedIndicate = false;\n    this.cpuLimitIndicate = false;\n    this.memoryLimitIndicate = false;\n    this.nsListState();\n    this.hideNs = store.getBool(this.name + 'NsList', false);\n  }\n\n  toggle() {\n    super.toggle();\n    let nodeStore = store.getObject('nodeStore');\n    let index = nodeStore.findIndex((item) => item.name === this.name);\n    if (index || index === 0) {\n      nodeStore[index].open = this.open;\n    }\n    store.setObject('nodeStore', nodeStore);\n  }\n\n  nsListState() {\n    if (store.get(this.name + 'NsList') === undefined) {\n      store.set(this.name + 'NsList', true);\n    }\n\n    return store.get(this.name + 'NsList');\n  }\n\n  get status() {\n    let type = this.data.status.conditions.filter((item) => item.type === 'Ready')[0];\n\n    if (type !== undefined && type.status === 'True') {\n      return SUCCESS;\n    } else {\n      return ERROR;\n    }\n  }\n\n  get podsCount() {\n    if (this.namespaces) {\n      return this.namespaces.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue.pods.length;\n      }, 0);\n    }\n    return 0;\n  }\n\n  get color() {\n    if (this.status === SUCCESS) {\n      return '#18e018';\n    } else {\n      return COLOR_RED;\n    }\n  }\n\n  get message() {\n    if (this.status === SUCCESS) {\n      return 'ok';\n    } else {\n      return \"Node isn't ready\";\n    }\n  }\n\n  get cpuStatus() {\n    let cpu = this.data.status.allocatable.cpu;\n    if (cpu.indexOf('m') > -1) {\n      cpu = parseInt(cpu, 10) / 1000;\n    }\n    return this.__getStatus(this.metrics.cpuUsed, cpu);\n  }\n\n  get cpuStatusRequested() {\n    let cpu = this.data.status.allocatable.cpu;\n    if (cpu.indexOf('m') > -1) {\n      cpu = parseInt(cpu, 10) / 1000;\n    }\n    return this.__getStatusRequested(this.metrics.cpuRequested, cpu);\n  }\n\n  get cpuLimitStatus() {\n    let cpu = this.data.status.allocatable.cpu;\n    if (cpu.indexOf('m') > -1) {\n      cpu = parseInt(cpu, 10) / 1000;\n    }\n    return this.__getStatusLimit(this.metrics.cpuLimit, cpu);\n  }\n\n  get memoryStatus() {\n    return this.__getStatus(this.metrics.memoryUsed, this.__getBytes(this.data.status.allocatable.memory));\n  }\n\n  get memoryStatusRequested() {\n    return this.__getStatusRequested(\n      this.metrics.memoryRequested,\n      this.__getBytes(this.data.status.allocatable.memory)\n    );\n  }\n\n  get memoryLimitStatus() {\n    return this.__getStatusLimit(this.metrics.memoryLimit, this.__getBytes(this.data.status.allocatable.memory));\n  }\n\n  get podsStatus() {\n    return this.__getStatus(this.metrics.podsCount, this.data.status.allocatable.pods);\n  }\n\n  get podsStatusRequested() {\n    return this.__getStatusRequested(this.metrics.podsCount, this.data.status.allocatable.pods);\n  }\n\n  get hostIp() {\n    return this.data.status.addresses.filter((item) => item.type === 'InternalIP')[0].address;\n  }\n\n  get memoryCapacityFormatted() {\n    return __convertToGB(this.__getBytes(this.data.status.capacity.memory));\n  }\n\n  get memoryAllocatableFormatted() {\n    return __convertToGB(this.__getBytes(this.data.status.allocatable.memory));\n  }\n\n  get cpuAllocatableFormatted() {\n    let cpu = this.data.status.allocatable.cpu;\n    if (cpu.indexOf('m') > -1) {\n      cpu = parseInt(cpu, 10) / 1000;\n    }\n    return cpu;\n  }\n\n  /*used format*/\n\n  get memoryUsedFormatted() {\n    return (\n      __convertToGB(this.metrics.memoryUsed) +\n      ' (' +\n      __percentUsed(this.metrics.memoryUsed, this.__getBytes(this.data.status.allocatable.memory)) +\n      ')'\n    );\n  }\n\n  get memoryRequestedFormatted() {\n    return (\n      __convertToGB(this.metrics.memoryRequested) +\n      ' (' +\n      __percentUsed(this.metrics.memoryRequested, this.__getBytes(this.data.status.allocatable.memory)) +\n      ')'\n    );\n  }\n\n  get memoryLimitFormatted() {\n    return (\n      __convertToGB(this.metrics.memoryLimit) +\n      ' (' +\n      __percentUsed(this.metrics.memoryLimit, this.__getBytes(this.data.status.allocatable.memory)) +\n      ')'\n    );\n  }\n\n  get cpuUsedFormatted() {\n    let cpu = this.data.status.allocatable.cpu;\n    if (cpu.indexOf('m') > -1) {\n      cpu = parseInt(cpu, 10) / 1000;\n    }\n\n    return __roundCpu(this.metrics.cpuUsed) + ' (' + __percentUsed(this.metrics.cpuUsed, cpu) + ')';\n  }\n\n  get cpuRequestedFormatted() {\n    let cpu = this.data.status.allocatable.cpu;\n    if (cpu.indexOf('m') > -1) {\n      cpu = parseInt(cpu, 10) / 1000;\n    }\n\n    return __roundCpu(this.metrics.cpuRequested) + ' (' + __percentUsed(this.metrics.cpuRequested, cpu) + ')';\n  }\n\n  get cpuLimitFormatted() {\n    let cpu = this.data.status.allocatable.cpu;\n    if (cpu.indexOf('m') > -1) {\n      cpu = parseInt(cpu, 10) / 1000;\n    }\n\n    return __roundCpu(this.metrics.cpuLimit) + ' (' + __percentUsed(this.metrics.cpuLimit, cpu) + ')';\n  }\n\n  get podsUsedFormatted() {\n    return (\n      this.metrics.podsCount + ' (' + __percentUsed(this.metrics.podsCount, this.data.status.allocatable.pods) + ')'\n    );\n  }\n\n  get podsRequestedFormatted() {\n    return (\n      this.metrics.podsCount + ' (' + __percentUsed(this.metrics.podsCount, this.data.status.allocatable.pods) + ')'\n    );\n  }\n\n  /*percent used*/\n\n  get cpuPercentUsed() {\n    let cpu = this.data.status.allocatable.cpu;\n    if (cpu.indexOf('m') > -1) {\n      cpu = parseInt(cpu, 10) / 1000;\n    }\n    return __roundCpu(this.metrics.cpuUsed) + ' / ' + cpu + ' (' + __percentUsed(this.metrics.cpuUsed, cpu) + ')';\n  }\n\n  get cpuPercentRequested() {\n    let cpu = this.data.status.allocatable.cpu;\n    if (cpu.indexOf('m') > -1) {\n      cpu = parseInt(cpu, 10) / 1000;\n    }\n    return (\n      __roundCpu(this.metrics.cpuRequested) + ' / ' + cpu + ' (' + __percentUsed(this.metrics.cpuRequested, cpu) + ')'\n    );\n  }\n\n  get memoryPercentUsed() {\n    let used = this.metrics.memoryUsed;\n    let allocatable = this.__getBytes(this.data.status.allocatable.memory);\n    let percent = __percentUsed(used, allocatable);\n    return __convertToGB(used) + ' / ' + __convertToGB(allocatable) + ' (' + percent + ') ';\n  }\n\n  get memoryPercentRequested() {\n    let allocatable = this.__getBytes(this.data.status.allocatable.memory);\n    let percent = __percentUsed(this.metrics.memoryRequested, allocatable);\n    return __convertToGB(this.metrics.memoryRequested) + ' / ' + __convertToGB(allocatable) + ' (' + percent + ') ';\n  }\n\n  get podsPercentUsed() {\n    let used = this.metrics.podsCount;\n    let allocatable = this.data.status.allocatable.pods;\n    let percent = __percentUsed(used, allocatable);\n    return used + ' / ' + allocatable + ' (' + percent + ') ';\n  }\n\n  /*color*/\n\n  get rowCpuColor() {\n    return this.__getColor(this.cpuStatus);\n  }\n\n  get rowCpuRequestedColor() {\n    return this.__getColor(this.cpuStatusRequested);\n  }\n\n  get rowCpuLimitColor() {\n    return this.__getColor(this.cpuLimitStatus);\n  }\n\n  get rowMemoryColor() {\n    return this.__getColor(this.memoryStatus);\n  }\n\n  get rowMemoryRequestedColor() {\n    return this.__getColor(this.memoryStatusRequested);\n  }\n\n  get rowMemoryLimitColor() {\n    return this.__getColor(this.memoryLimitStatus);\n  }\n\n  get rowPodsColor() {\n    return this.__getColor(this.podsStatus);\n  }\n\n  get rowPodsRequestedColor() {\n    return this.__getColor(this.podsStatusRequested);\n  }\n\n  parseMetrics(cpuReq, memoryReq, pods, cpuUsed, memoryUsed, cpuLimit, memoryLimit) {\n    const currentStatus = {\n      podsStatus: this.podsStatus,\n      podsStatusRequested: this.podsStatusRequested,\n      cpuStatus: this.cpuStatus,\n      cpuStatusRequested: this.cpuStatusRequested,\n      cpuLimitStatus: this.cpuLimitStatus,\n      memoryStatus: this.memoryStatus,\n      memoryStatusRequested: this.memoryStatusRequested,\n      memoryLimitStatus: this.memoryLimitStatus,\n    };\n\n    this.metrics.cpuRequested = this.__getLastMetric(cpuReq);\n    this.metrics.memoryRequested = this.__getLastMetric(memoryReq);\n    this.metrics.podsCount = this.__getLastMetricByInstance(pods);\n    this.metrics.cpuUsed = this.__getLastMetricByInstance(cpuUsed);\n    this.metrics.memoryUsed = this.__getLastMetricByInstance(memoryUsed);\n    this.metrics.cpuLimit = this.__getLastMetricByInstance(cpuLimit);\n    this.metrics.memoryLimit = this.__getLastMetricByInstance(memoryLimit);\n\n    for (const type in currentStatus) {\n      if (currentStatus.hasOwnProperty(type) && this.hasOwnProperty(type)) {\n        if (currentStatus[type] !== undefined && currentStatus[type] !== this[type]) {\n          this.setMetricIndicated(type);\n        }\n      }\n    }\n  }\n\n  setMetricIndicated(metricStatus) {\n    const map = {\n      podsStatus: 'podsIndicate',\n      podsStatusRequested: 'podsRequestedIndicate',\n      cpuStatus: 'cpuIndicate',\n      cpuStatusRequested: 'cpuRequestedIndicate',\n      cpuLimitStatus: 'cpuLimitIndicate',\n      memoryStatus: 'memoryIndicate',\n      memoryStatusRequested: 'memoryRequestedIndicate',\n      memoryLimitStatus: 'memoryLimitIndicate',\n    };\n    if (map[metricStatus] && this.hasOwnProperty(map[metricStatus])) {\n      this[map[metricStatus]] = true;\n      setTimeout(() => {\n        this[map[metricStatus]] = false;\n      }, 10000);\n    }\n  }\n\n  __getLastMetricByInstance(metrics) {\n    const datapoints = metrics.filter((item) => {\n      return item.target.includes(this.hostIp) || item.target.includes(this.name);\n    })[0];\n\n    if (datapoints !== undefined) {\n      return datapoints.datapoint;\n    }\n    return 'N/A';\n  }\n\n  __getLastMetric(metrics) {\n    const datapoints = metrics.filter((item) => {\n      return item.target === this.name;\n    })[0];\n\n    if (datapoints !== undefined) {\n      return datapoints.datapoint;\n    }\n    return 'N/A';\n  }\n\n  __getBytes(str: string): number {\n    let bytes = this.__parseInt(str) * 1024;\n    if (str.indexOf('Mi') > -1) {\n      bytes = bytes * 1024;\n    }\n    return bytes;\n  }\n\n  __parseInt(str: string): number {\n    return parseInt(str, 10);\n  }\n\n  __getStatus(used, allocatable) {\n    let diff = used / allocatable;\n\n    if (diff <= 0.5) {\n      return SUCCESS;\n    } else if (diff > 0.5 && diff <= 0.8) {\n      return WARNING;\n    } else if (diff > 0.8) {\n      return ERROR;\n    } else {\n      return;\n    }\n  }\n\n  __getStatusRequested(requested, allocatable) {\n    let diff = requested / allocatable;\n\n    if (diff <= 0.5) {\n      return SUCCESS;\n    } else if (diff > 0.5 && diff <= 0.8) {\n      return WARNING;\n    } else if (diff > 0.8) {\n      return ERROR;\n    } else {\n      return;\n    }\n  }\n\n  __getStatusLimit(limit, allocatable): number {\n    let diff = limit / allocatable;\n\n    if (diff <= 0.9) {\n      return SUCCESS;\n    } else if (diff > 0.9 && diff <= 1) {\n      return WARNING;\n    } else if (diff > 1) {\n      return ERROR;\n    }\n    return;\n  }\n\n  __getColor(status): string {\n    switch (status) {\n      case SUCCESS:\n        return COLOR_GREEN;\n      case WARNING:\n        return COLOR_YELLOW;\n      case ERROR:\n        return COLOR_RED;\n      default:\n        return;\n    }\n  }\n}\n","import appEvents from 'grafana/app/core/app_events';\nimport { Pod } from '../common/types/pod';\nimport { PrometheusProxy } from '../common/proxies/prometheusProxy';\nimport { ERROR, PODS_LIMIT, SUCCEEDED, SUCCESS, TERMINATING, WARNING } from '../common/constants';\nimport { Component } from '../common/types/component';\nimport { Service } from '../common/types/service';\nimport { Job } from '../common/types/job';\nimport { Cronjob } from '../common/types/cronjob';\nimport { Namespace } from '../common/types/namespace';\nimport store from '../common/store';\nimport { Deployment } from '../common/types/deployment';\nimport { Statefulset } from '../common/types/statefulset';\nimport { Daemonset } from '../common/types/daemonset';\nimport { Node } from '../common/types/node';\nimport { __convertToGB, __convertToHours, __convertToMicro, __roundCpu } from '../common/helpers';\n\nconst REFRESH_RATE_DEFAULT = 60000;\nconst ERROR_MSG_MEMORY_REQUESTS_LIMITS = 'Memory limits and requests not configured';\nconst ERROR_MSG_CPU_REQUESTS_LIMITS = 'CPU limits and requests not configured';\n\nexport class K8sPage {\n  pageReady: boolean;\n  namespaceMapReady: boolean;\n  nodesMapReady = false;\n  $scope: any;\n  cluster: any;\n  prometheusDS: any;\n  isAdmin: boolean;\n  location: any;\n  backendSrv: any;\n  datasourceSrv: any;\n  contextSrv: any;\n  timeout: any;\n  refreshRate: number;\n  $q: any;\n  scrollToTop: object;\n\n  //common store\n  storePods: Pod[] = [];\n  storeEvents: any[] = null;\n  storeComponents: Component[] = [];\n  storeServices: Service[] = [];\n  storeJobs: Job[] = [];\n  storeCronJobs: Cronjob[] = [];\n  storeDeployments: Deployment[] = [];\n  storeStatefulSets: Statefulset[] = [];\n  storeDaemonSets: Daemonset[] = [];\n  namespaceMap: Namespace[] = [];\n  nodesMap: Node[] = [];\n  nodesError: Boolean | Error = false;\n  podsError: Boolean | Error = false;\n  componentsError: Boolean | Error = false;\n  orgId = 1;\n  showMenu = false;\n  updatePods(pods: Pod[]) {}\n\n  constructor($scope, backendSrv, datasourceSrv, contextSrv, $location, timeout, $q, $window) {\n    this.$q = $q;\n    this.$scope = $scope;\n    this.pageReady = false;\n    this.location = $location;\n    this.backendSrv = backendSrv;\n    this.contextSrv = contextSrv;\n    this.datasourceSrv = datasourceSrv;\n    this.timeout = timeout;\n    this.orgId = $window.grafanaBootData && $window.grafanaBootData.user ? $window.grafanaBootData.user.orgId : 1;\n    try {\n      this.isAdmin = this.contextSrv.hasRole('Admin');\n    } catch (e) {\n      console.error(e);\n      this.isAdmin = false;\n    }\n    if (!('clusterName' in $location.search())) {\n      appEvents.emit('alert-error', ['Cluster not specified']);\n\n      return;\n    }\n    document.title = 'DevOpsProdigy KubeGraf';\n\n    const elem = document.querySelector('.scroll-canvas');\n    this.scrollToTop = () => {\n      elem.scrollTo({\n        top: 0,\n        left: elem.scrollLeft,\n        behavior: 'smooth',\n      });\n    };\n  }\n\n  async __getServersInfo(nodes: Node[]) {\n    const info = [];\n    const instance = nodes\n      .reduce((accumulator: string[], node) => [...accumulator, `${node.name}|${node.hostIp}:.+`], [])\n      .join('|');\n\n    const result = await Promise.all([\n      this.prometheusDS.query(\n        {\n          expr: `count(count(node_cpu_seconds_total{instance=~\"${instance}\"}) by (cpu, instance)) by (instance)`,\n          legend: 'instance',\n        },\n        false\n      ), //cpuCores\n      this.prometheusDS.query(\n        {\n          expr: `sum(node_memory_MemTotal_bytes{instance=~\"${instance}\"}) by (instance)`,\n          legend: 'instance',\n        },\n        false\n      ), //ramTotal\n      this.prometheusDS.query(\n        {\n          expr: `sum(node_memory_SwapTotal_bytes{instance=~\"${instance}\"}) by (instance)`,\n          legend: 'instance',\n        },\n        false\n      ), //swapTotal\n      this.prometheusDS.query(\n        {\n          expr: `sum(node_filesystem_size_bytes{instance=~\"${instance}\",mountpoint=\"/\",fstype!=\"rootfs\"}) by (instance)`,\n          legend: 'instance',\n        },\n        false\n      ), //rootFSTotal\n      this.prometheusDS.query(\n        {\n          expr: `sum(node_load1{instance=~\"${instance}\"}) by (instance)`,\n          legend: 'instance',\n        },\n        false\n      ), //sysLoad\n      this.prometheusDS.query(\n        {\n          expr: `sum(node_time_seconds{instance=~\"${instance}\"} - node_boot_time_seconds{instance=~\"${instance}\"}) by (instance)`,\n          legend: 'instance',\n        },\n        false\n      ), //uptime\n    ]);\n\n    for (const node of nodes) {\n      const datapoints = result.map((item) => {\n        return item.find((element) => element.target === node.name || element.target.indexOf(`${node.hostIp}:`) === 0);\n      });\n\n      info[node.name] = {\n        cpuCores: datapoints[0] && datapoints[0].datapoint,\n        ramTotal: datapoints[1] && __convertToGB(datapoints[1].datapoint),\n        swapTotal: datapoints[2] && __convertToGB(datapoints[2].datapoint),\n        rootFSTotal: datapoints[3] && __convertToGB(datapoints[3].datapoint),\n        sysLoad: datapoints[4] && datapoints[4].datapoint,\n        uptime: datapoints[5] && __convertToHours(datapoints[5].datapoint * 1000),\n      };\n    }\n\n    return info;\n  }\n\n  getNodeDashboardLink(node) {\n    let dbUrl = 'dashboard/db/devopsprodigy-kubegraf-nodes-dashboard?orgId=' + this.orgId;\n    dbUrl += '&' + 'var-cluster=' + this.cluster.name;\n    dbUrl += '&' + 'var-node=' + node.name;\n    return dbUrl;\n  }\n\n  getPodDashboardLink(pod) {\n    let dbUrl = 'dashboard/db/devopsprodigy-kubegraf-pods-dashboard?orgId=' + this.orgId;\n    dbUrl += '&' + 'var-cluster=' + this.cluster.name;\n    dbUrl += '&' + 'var-namespace=' + pod.data.metadata.namespace;\n    dbUrl += '&' + 'var-pod=' + pod.name;\n    return dbUrl;\n  }\n\n  getEntityDashboardLink(entity, name) {\n    let entityName = name.substring(0, name.length - 1);\n    let dbUrl = 'dashboard/db/devopsprodigy-kubegraf-' + name + '-dashboard?orgId=' + this.orgId;\n    dbUrl += '&' + 'var-cluster=' + this.cluster.name;\n    dbUrl += '&' + 'var-namespace=' + entity.data.metadata.namespace;\n    dbUrl += '&' + 'var-' + entityName + '=' + entity.name;\n    return dbUrl;\n  }\n\n  getNodeMap(withoutPods = false) {\n    let _promises = [];\n    _promises.push(this.getNodes());\n\n    if (!withoutPods) {\n      _promises.push(this.getPods(true));\n    }\n\n    return this.$q.all(_promises).then(() => {\n      if (!withoutPods) {\n        this.insertPodsToNodesMap(this.storePods);\n        this.getPodsMetrics();\n      }\n\n      this.timeout(() => {\n        this.refreshNodes();\n      }, this.refreshRate);\n    });\n  }\n\n  getResourcesMetrics() {\n    let _promises = [];\n    _promises.push(this.__getCpuMetricsRequested());\n    _promises.push(this.__getMemoryMetricsRequested());\n    _promises.push(this.__getPodsCountMetrics());\n    _promises.push(this.__getCpuMetricsUsed());\n    _promises.push(this.__getMemoryMetricsUsed());\n    _promises.push(this.__getCpuLimitMetrics());\n    _promises.push(this.__getMemoryLimitMetrics());\n\n    return this.$q.all(_promises).then((results) => {\n      this.nodesMap.forEach((node) => {\n        node.parseMetrics(results[0], results[1], results[2], results[3], results[4], results[5], results[6]);\n      });\n\n      this.timeout(() => {\n        this.getResourcesMetrics();\n      }, this.refreshRate);\n    });\n  }\n\n  __getCpuMetricsUsed() {\n    const promQuery = {\n      expr: 'sum(rate(container_cpu_usage_seconds_total{id=\"/\"}[2m])) by (instance)',\n      legend: 'instance',\n    };\n    return this.prometheusDS.query(promQuery, false).then((res) => res);\n  }\n\n  __getCpuMetricsRequested() {\n    const promQuery = {\n      expr:\n        'sum(sum(kube_pod_container_resource_requests_cpu_cores) by (namespace, pod, node) * on (pod, namespace) group_left()  (sum(kube_pod_status_phase{phase=\"Running\"}) by (pod, namespace) == 1)) by (node)',\n      legend: 'node',\n    };\n\n    return this.prometheusDS.query(promQuery, false).then((res) => res);\n  }\n\n  __getCpuLimitMetrics() {\n    const promQuery = {\n      expr:\n        'sum(sum(kube_pod_container_resource_limits_cpu_cores) by (namespace, pod, node) * on (pod, namespace) group_left()  (sum(kube_pod_status_phase{phase=\"Running\"}) by (pod, namespace) == 1)) by (node)',\n      legend: 'node',\n    };\n\n    return this.prometheusDS.query(promQuery, false).then((res) => res);\n  }\n\n  __getMemoryMetricsRequested() {\n    const promQuery = {\n      expr:\n        'sum(sum(kube_pod_container_resource_requests_memory_bytes) by (namespace, pod, node) * on (pod, namespace) group_left()  (sum(kube_pod_status_phase{phase=\"Running\"}) by (pod, namespace) == 1)) by (node)',\n      legend: 'node',\n    };\n\n    return this.prometheusDS.query(promQuery, false).then((res) => res);\n  }\n\n  __getMemoryLimitMetrics() {\n    const promQuery = {\n      expr:\n        'sum(sum(kube_pod_container_resource_limits_memory_bytes) by (namespace, pod, node) * on (pod, namespace) group_left()  (sum(kube_pod_status_phase{phase=\"Running\"}) by (pod, namespace) == 1)) by (node)',\n      legend: 'node',\n    };\n\n    return this.prometheusDS.query(promQuery, false).then((res) => res);\n  }\n\n  __getMemoryMetricsUsed() {\n    const promQuery = {\n      expr:\n        'sum(node_memory_MemTotal_bytes) by (instance) - sum(node_memory_MemFree_bytes) by (instance) - sum(node_memory_Buffers_bytes) by (instance) - sum(node_memory_Cached_bytes) by (instance) ',\n      legend: 'instance',\n    };\n    return this.prometheusDS.query(promQuery, false).then((res) => res);\n  }\n\n  __getPodsCountMetrics() {\n    const promQuery = {\n      expr: 'sum(kubelet_running_pod_count) by (instance)',\n      legend: 'instance',\n    };\n\n    return this.prometheusDS.query(promQuery, false).then((res) => res);\n  }\n\n  getNodes() {\n    return this.cluster.getNodes().then((nodes) => {\n      let nodeStore = [];\n      let getStore = store.getObject('nodeStore');\n\n      if (getStore) {\n        nodeStore = getStore;\n      }\n\n      if (nodes instanceof Array) {\n        this.nodesError = false;\n        nodes.forEach((node) => {\n          let nd = new Node(node);\n          this.nodesMap.push(nd);\n\n          let index = nodeStore.findIndex((item) => item.name === nd.name);\n          if (index > -1) {\n            nd.open = nodeStore[index].open;\n          } else {\n            nodeStore.push({ name: nd.name, open: nd.open });\n          }\n        });\n        store.setObject('nodeStore', nodeStore);\n      } else if (nodes instanceof Error) {\n        this.nodesError = nodes;\n      }\n    });\n  }\n\n  getPodsMetrics() {\n    let _promises = [];\n    _promises.push(this.__getPodsUsedCpu());\n    _promises.push(this.__getPodsUsedMemory());\n    _promises.push(this.__getPodsRequestedCpu());\n    _promises.push(this.__getPodsRequestedMemory());\n    _promises.push(this.__getPodsLimitCpu());\n    _promises.push(this.__getPodsLimitMemory());\n\n    this.$q.all(_promises).then((results) => {\n      this.nodesMap.forEach((node) => {\n        node.namespaces.map((namespace) => {\n          namespace.pods.map((pod) => {\n            const cpu = results[0].find((item) => item.target === pod.name);\n            const mem = results[1].find((item) => item.target === pod.name);\n            const cpuReq = results[2].find((item) => item.target === pod.name);\n            const memReq = results[3].find((item) => item.target === pod.name);\n            const cpuLimit = results[4].find((item) => item.target === pod.name);\n            const memLimit = results[5].find((item) => item.target === pod.name);\n\n            if (cpu !== undefined) {\n              pod.sourceMetrics.cpuUsed = cpu.datapoint;\n              pod.metrics.cpuUsed = __convertToMicro(cpu.datapoint.toFixed(3));\n            }\n            if (mem !== undefined) {\n              pod.sourceMetrics.memoryUsed = mem.datapoint;\n              pod.metrics.memoryUsed = __convertToGB(mem.datapoint);\n            }\n            if (cpuReq !== undefined) {\n              pod.sourceMetrics.cpuRequested = cpuReq.datapoint;\n              pod.metrics.cpuRequested = __convertToMicro(__roundCpu(cpuReq.datapoint));\n            }\n            if (memReq !== undefined) {\n              pod.sourceMetrics.memoryRequested = memReq.datapoint;\n              pod.metrics.memoryRequested = __convertToGB(memReq.datapoint);\n            }\n            if (cpuLimit !== undefined) {\n              pod.sourceMetrics.cpuLimit = cpuLimit.datapoint;\n              pod.metrics.cpuLimit = __convertToMicro(__roundCpu(cpuLimit.datapoint));\n            }\n            if (memLimit !== undefined) {\n              pod.sourceMetrics.memoryLimit = memLimit.datapoint;\n              pod.metrics.memoryLimit = __convertToGB(memLimit.datapoint);\n            }\n          });\n        });\n      });\n\n      this.timeout(() => {\n        this.getPodsMetrics();\n      }, this.refreshRate);\n    });\n  }\n\n  __getPodsUsedCpu() {\n    const podsUsedCpu = {\n      //expr: 'sum(rate(container_cpu_usage_seconds_total{pod_name!=\"\", container_name!=\"\", container_name!=\"POD\"}[2m])) by (pod_name)',\n      expr:\n        'sum(rate(container_cpu_usage_seconds_total{pod!=\"\", container!=\"\", container!=\"POD\"}[2m])) by (pod) or ' +\n        'sum(label_replace(rate(container_cpu_usage_seconds_total{pod_name!=\"\", container_name!=\"\", container_name!=\"POD\"}[2m]), \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod)',\n      legend: 'pod',\n    };\n\n    return this.prometheusDS.query(podsUsedCpu, false).then((res) => res);\n  }\n\n  __getPodsUsedMemory() {\n    const podsUsedMemory = {\n      //expr: 'sum(container_memory_usage_bytes{container_name!=\"\", container_name!=\"POD\"}) by (pod_name)'\n      expr:\n        'sum(container_memory_usage_bytes{container!=\"\", container!=\"POD\"}) by (pod) or ' +\n        'sum(label_replace(container_memory_usage_bytes{container_name!=\"\", container_name!=\"POD\"}, \"pod\", \"$1\", \"pod_name\", \"(.*)\")) by (pod)',\n      legend: 'pod',\n    };\n\n    return this.prometheusDS.query(podsUsedMemory, false).then((res) => res);\n  }\n\n  __getPodsRequestedCpu() {\n    const podsUsedCpu = {\n      expr: 'sum(kube_pod_container_resource_requests_cpu_cores) by (pod)',\n      legend: 'pod',\n    };\n\n    return this.prometheusDS.query(podsUsedCpu, false).then((res) => res);\n  }\n\n  __getPodsLimitCpu() {\n    const podsLimitCpu = {\n      expr: 'sum(kube_pod_container_resource_limits_cpu_cores) by (pod)',\n      legend: 'pod',\n    };\n\n    return this.prometheusDS.query(podsLimitCpu, false).then((res) => res);\n  }\n\n  __getPodsRequestedMemory() {\n    const podsUsedMemory = {\n      expr: 'sum(kube_pod_container_resource_requests_memory_bytes) by (pod)',\n      legend: 'pod',\n    };\n\n    return this.prometheusDS.query(podsUsedMemory, false).then((res) => res);\n  }\n\n  __getPodsLimitMemory() {\n    const podsLimitMemory = {\n      expr: 'sum(kube_pod_container_resource_limits_memory_bytes) by (pod)',\n      legend: 'pod',\n    };\n\n    return this.prometheusDS.query(podsLimitMemory, false).then((res) => res);\n  }\n\n  insertPodsToNodesMap(pods) {\n    this.nodesMap.forEach((node) => {\n      let filterPods = pods.filter((pod) => pod.data.status.hostIP === node.hostIp);\n\n      filterPods.forEach((pod) => {\n        let _nsIsset = node.namespaces.filter((item) => {\n          return item.name === pod.data.metadata.namespace;\n        });\n\n        if (_nsIsset.length === 0) {\n          let _ns = {\n            name: pod.data.metadata.namespace,\n            pods: [],\n            limit: PODS_LIMIT,\n            sort: 'name',\n          };\n          node.namespaces.push(_ns);\n        }\n\n        let _ns = node.namespaces.filter((item) => {\n          return item.name === pod.data.metadata.namespace;\n        })[0];\n        _ns.pods.push(pod);\n      });\n    });\n  }\n\n  refreshNodes() {\n    this.cluster\n      .getNodes()\n      .then((nodes) => {\n        return this.nodesMap.forEach((issetNode) => {\n          let equalNode = nodes.filter((item) => {\n            return item.metadata.uid === issetNode.data.metadata.uid;\n          });\n          if (equalNode.length > 0) {\n            equalNode = equalNode[0];\n            issetNode.update(equalNode);\n          }\n        });\n      })\n      .then(() => {\n        this.timeout(() => {\n          this.refreshNodes();\n        }, this.refreshRate);\n      });\n  }\n\n  getNamespaceMap() {\n    this.cluster.getNamespaces().then((namespaces) => {\n      let namespaceStore = [];\n      let getStore = store.getObject('namespaceStore');\n      if (getStore) {\n        namespaceStore = getStore;\n      }\n      namespaces.forEach((namespace) => {\n        let ns = new Namespace(namespace);\n        this.namespaceMap.push(ns);\n        let index = namespaceStore.findIndex((item) => item.name === ns.name);\n\n        if (index > -1) {\n          ns.open = namespaceStore[index].open;\n        } else {\n          namespaceStore.push({ name: ns.name, open: ns.open });\n        }\n      });\n      store.setObject('namespaceStore', namespaceStore);\n\n      let _promises = [];\n      _promises.push(this.attachDeployments());\n      _promises.push(this.attachStatefulsets());\n      _promises.push(this.attachDaemonsets());\n      _promises.push(this.getClusterCronJobs());\n      _promises.push(this.getClusterJobs());\n\n      this.$q.all(_promises).then(() => {\n        this.attachJobs();\n        this.attachCronJobs();\n\n        let _psPromises = [];\n        _psPromises.push(this.getAllServices());\n        _psPromises.push(this.getPods());\n        this.$q.all(_psPromises).then(() => {\n          this.attachPodsToMap();\n          this.namespaceMapReady = true;\n        });\n      });\n    });\n  }\n\n  refreshNamespaceMap() {\n    this.cluster.getNamespaces().then((namespaces) => {\n      let namespaceStore = [];\n      namespaces.forEach((namespace) => {\n        let ns = new Namespace(namespace);\n        if (this.namespaceMap.every((item) => item.name !== ns.name)) {\n          this.namespaceMap.push(ns);\n          const storeIndex = namespaceStore.findIndex((item) => item.name === ns.name);\n          if (storeIndex > -1) {\n            ns.open = namespaceStore[storeIndex].open;\n          } else {\n            namespaceStore.push({ name: ns.name, open: ns.open });\n          }\n        }\n      });\n      this.namespaceMap.forEach((ns, index) => {\n        if (namespaces.every((item) => item.metadata.name !== ns.name)) {\n          this.namespaceMap.splice(index, 1);\n          const storeIndex = namespaceStore.findIndex((item) => item.name === ns.name);\n          if (storeIndex > -1) {\n            namespaceStore.splice(storeIndex, 1);\n          }\n        }\n      });\n      store.setObject('namespaceStore', namespaceStore);\n\n      let _promises = [];\n      _promises.push(this.refreshDeployments());\n      _promises.push(this.refreshStatefulsets());\n      _promises.push(this.refreshDaemonsets());\n      _promises.push(this.getClusterCronJobs());\n      _promises.push(this.refreshJobs());\n\n      this.$q.all(_promises).then(() => {\n        let _psPromises = [];\n        _psPromises.push(this.getAllServices());\n        this.$q.all(_psPromises).then(() => {\n          this.attachPodsToMap();\n          this.namespaceMapReady = true;\n        });\n      });\n    });\n  }\n\n  attachDeployments() {\n    return this.cluster.getDeployments().then((deployments) => {\n      deployments.forEach((item) => {\n        let deploy = new Deployment(item);\n        let _ns = this.__getNamespace(item.metadata.namespace);\n        this.storeDeployments.push(deploy);\n        _ns.deployments.push(deploy);\n      });\n    });\n  }\n\n  refreshDeployments() {\n    this.cluster.getDeployments().then((newDeployments) => {\n      this.storeDeployments\n        .filter((deployment) => {\n          return !deployment.is_deleted;\n        })\n        .forEach((issetDeployment) => {\n          let equalDeployment = newDeployments.filter((item) => {\n            return item.metadata.uid === issetDeployment.data.metadata.uid;\n          });\n          if (equalDeployment.length > 0) {\n            equalDeployment = equalDeployment[0];\n          } else {\n            equalDeployment = false;\n          }\n\n          if (equalDeployment !== false) {\n            issetDeployment.update(equalDeployment);\n            newDeployments.splice(newDeployments.indexOf(equalDeployment), 1);\n          } else {\n            issetDeployment.destroy();\n          }\n        });\n      newDeployments = newDeployments.map((newDeployment) => new Deployment(newDeployment));\n      this.storeDeployments = this.storeDeployments.concat(newDeployments);\n\n      newDeployments.forEach((newDeployment) => {\n        let _ns = this.__getNamespace(newDeployment.data.metadata.namespace);\n        _ns.deployments.push(newDeployment);\n      });\n    });\n  }\n\n  attachStatefulsets() {\n    return this.cluster.getStatefulsets().then((statefulsets) => {\n      statefulsets.forEach((item) => {\n        let _ns = this.__getNamespace(item.metadata.namespace);\n        let ss = new Statefulset(item);\n        _ns.statefulsets.push(ss);\n        this.storeStatefulSets.push(ss);\n      });\n    });\n  }\n\n  refreshStatefulsets() {\n    this.cluster.getStatefulsets().then((Statefulsets) => {\n      this.storeStatefulSets\n        .filter((statefulset) => {\n          return !statefulset.is_deleted;\n        })\n        .forEach((issetStatefulset) => {\n          let equalStatefulset = Statefulsets.filter((item) => {\n            return item.metadata.uid === issetStatefulset.data.metadata.uid;\n          });\n          if (equalStatefulset.length > 0) {\n            equalStatefulset = equalStatefulset[0];\n          } else {\n            equalStatefulset = false;\n          }\n\n          if (equalStatefulset !== false) {\n            issetStatefulset.update(equalStatefulset);\n            Statefulsets.splice(Statefulsets.indexOf(equalStatefulset), 1);\n          } else {\n            issetStatefulset.destroy();\n          }\n        });\n      Statefulsets = Statefulsets.map((newStatefulset) => new Statefulset(newStatefulset));\n      this.storeStatefulSets = this.storeStatefulSets.concat(Statefulsets);\n\n      Statefulsets.forEach((newStatefulset) => {\n        let _ns = this.__getNamespace(newStatefulset.data.metadata.namespace);\n        _ns.statefulsets.push(newStatefulset);\n      });\n    });\n  }\n\n  attachDaemonsets() {\n    return this.cluster.getDaemonsets().then((daemonsets) => {\n      daemonsets.forEach((item) => {\n        let _ns = this.__getNamespace(item.metadata.namespace);\n        let ds = new Daemonset(item);\n        _ns.daemonsets.push(ds);\n        this.storeDaemonSets.push(ds);\n      });\n    });\n  }\n\n  refreshDaemonsets() {\n    this.cluster.getDaemonsets().then((Daemonsets) => {\n      this.storeDaemonSets\n        .filter((daemonset) => {\n          return !daemonset.is_deleted;\n        })\n        .forEach((issetDaemonSet) => {\n          let equalDaemonSet = Daemonsets.filter((item) => {\n            return item.metadata.uid === issetDaemonSet.data.metadata.uid;\n          });\n          if (equalDaemonSet.length > 0) {\n            equalDaemonSet = equalDaemonSet[0];\n          } else {\n            equalDaemonSet = false;\n          }\n\n          if (equalDaemonSet !== false) {\n            issetDaemonSet.update(equalDaemonSet);\n            Daemonsets.splice(Daemonsets.indexOf(equalDaemonSet), 1);\n          } else {\n            issetDaemonSet.destroy();\n          }\n        });\n      Daemonsets = Daemonsets.map((newDaemonset) => new Daemonset(newDaemonset));\n      this.storeDaemonSets = this.storeDaemonSets.concat(Daemonsets);\n\n      Daemonsets.forEach((newDaemonset) => {\n        let _ns = this.__getNamespace(newDaemonset.data.metadata.namespace);\n        _ns.daemonsets.push(newDaemonset);\n      });\n    });\n  }\n\n  attachJobs() {\n    this.namespaceMap.forEach((ns) => {\n      let jobsList = this.storeJobs.filter(\n        (job) => !job.data.metadata.ownerReferences && job.data.metadata.namespace === ns.name\n      );\n      let ns_crons = this.storeCronJobs.filter((cron) => cron.data.metadata.namespace === ns);\n      ns_crons.forEach((cj) => {\n        let uid = cj.data.metadata.uid;\n        this.storeJobs.forEach((job) => {\n          if (job.data.metadata.ownerReferences) {\n            if (!job.data.metadata.ownerReferences.filter((item) => item.kind === 'CronJob' && item.uid === uid)[0]) {\n              jobsList.push(job);\n            }\n          }\n        });\n      });\n\n      ns.jobs = jobsList;\n    });\n  }\n\n  attachCronJobs() {\n    this.namespaceMap.forEach((ns) => {\n      ns.cronJobs = this.storeCronJobs.filter((cron) => cron.data.metadata.namespace === ns.name);\n\n      ns.cronJobs.forEach((cj) => {\n        let uid = cj.data.metadata.uid;\n        let jobsList = [];\n\n        this.storeJobs.forEach((job) => {\n          if (job.data.metadata.ownerReferences) {\n            if (job.data.metadata.ownerReferences.filter((item) => item.kind === 'CronJob' && item.uid === uid)[0]) {\n              jobsList.push(job);\n            }\n          }\n        });\n\n        cj.jobs = jobsList;\n      });\n    });\n  }\n\n  attachPodsToMap() {\n    this.namespaceMap.forEach((ns) => {\n      ns.deployments.forEach((deployment) => {\n        deployment.pods = this.__findPodsBySelector(deployment.data.spec.selector.matchLabels, ns.name);\n        deployment.services = this.__findServices(deployment);\n      });\n      ns.statefulsets.forEach((statefulset) => {\n        statefulset.pods = this.__findPodsBySelector(statefulset.data.spec.selector.matchLabels, ns.name);\n        statefulset.services = this.__findServices(statefulset);\n      });\n      ns.daemonsets.forEach((daemonset) => {\n        daemonset.pods = this.__findPodsBySelector(daemonset.data.spec.selector.matchLabels, ns.name);\n        daemonset.services = this.__findServices(daemonset);\n      });\n\n      ns.jobs.forEach((job) => {\n        job.pods = this.__findPodsBySelector(job.data.metadata.labels, ns.name);\n      });\n\n      ns.cronJobs.forEach((cron) => {\n        cron.jobs.map((job) => {\n          job.pods = this.__findPodsBySelector(job.data.metadata.labels, ns.name);\n        });\n      });\n\n      ns.other[0].pods = this.storePods.filter((item) => !item.used && item.data.metadata.namespace === ns.name);\n    });\n  }\n\n  updateJobs() {\n    let _promises = [];\n\n    _promises.push(this.refreshJobs());\n\n    this.$q.all(_promises).then(() => {\n      this.attachJobs();\n      this.attachCronJobs();\n    });\n  }\n\n  __findPodsBySelector(filter, namespace, pods = this.storePods) {\n    return pods\n      .filter((item) => {\n        return item.data.metadata.namespace === namespace;\n      })\n      .filter((item) => {\n        let labels = item.data.metadata.labels;\n\n        if (typeof labels === 'undefined') {\n          return false;\n        } else {\n          for (let prop in filter) {\n            if (!labels.hasOwnProperty(prop)) {\n              return false;\n            }\n            if (labels[prop] !== filter[prop]) {\n              return false;\n            }\n          }\n        }\n        item.used = true;\n        return true;\n      });\n  }\n\n  __findServices(entity) {\n    return this.storeServices.filter((item) => {\n      if (!item.data.spec || !item.data.spec.selector) {\n        return false;\n      }\n      let matchLabels = item.data.spec.selector;\n      let result = this.__findPodsBySelector(matchLabels, item.data.metadata.namespace, entity.pods);\n      if (result.length > 0) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  __prepareDS() {\n    return this.datasourceSrv.get(this.location.search().clusterName).then((ds) => {\n      this.cluster = ds;\n      this.__setRefreshRate(this.cluster.refreshRate);\n      return this.getPrometheusDS(this.cluster.prometheus).then(() => {\n        this.pageReady = true;\n      });\n    });\n  }\n\n  getPrometheusDS(name) {\n    return this.datasourceSrv.get(name).then((ds) => {\n      this.prometheusDS = new PrometheusProxy(ds);\n    });\n  }\n\n  getPods(skipEmptyHost = false) {\n    return this.cluster.getPods().then((pods) => {\n      if (pods instanceof Array) {\n        this.podsError = false;\n        if (skipEmptyHost) {\n          pods = pods.filter((pod) => typeof pod.status.hostIP !== 'undefined');\n        }\n        this.storePods = pods.map((pod) => new Pod(pod));\n      } else if (pods instanceof Error) {\n        this.podsError = pods;\n      }\n\n      this.timeout(() => {\n        this.refreshPods(skipEmptyHost);\n      }, this.refreshRate);\n    });\n  }\n\n  refreshPods(skipEmptyHost = false) {\n    this.cluster.getPods().then((pods) => {\n      if (pods instanceof Array) {\n        this.podsError = false;\n\n        if (skipEmptyHost) {\n          pods = pods.filter((pod) => typeof pod.status.hostIP !== 'undefined');\n        }\n\n        this.storePods\n          .filter((pod) => !pod.is_deleted)\n          .forEach((issetPod) => {\n            let equalPod = pods.filter((item) => {\n              return item.metadata.uid === issetPod.data.metadata.uid;\n            });\n            if (equalPod.length > 0) {\n              equalPod = equalPod[0];\n            } else {\n              equalPod = false;\n            }\n\n            if (equalPod !== false) {\n              issetPod.update(equalPod);\n              pods.splice(pods.indexOf(equalPod), 1);\n            } else {\n              issetPod.destroy();\n            }\n          });\n        pods = pods.map((pod) => new Pod(pod));\n        this.storePods = this.storePods.concat(pods);\n        this.updatePods(pods);\n      } else if (pods instanceof Error) {\n        this.podsError = pods;\n      }\n    });\n\n    this.timeout(() => {\n      this.refreshPods(skipEmptyHost);\n    }, this.refreshRate);\n  }\n\n  getClusterComponents() {\n    this.cluster.getComponents().then((components) => {\n      if (components instanceof Array) {\n        this.componentsError = false;\n        this.storeComponents = components.map((component) => new Component(component));\n      } else if (components instanceof Error) {\n        this.componentsError = components;\n      }\n\n      this.timeout(() => {\n        this.refreshClusterComponents();\n      }, this.refreshRate);\n    });\n  }\n\n  refreshClusterComponents() {\n    this.cluster.getComponents().then((components) => {\n      if (components instanceof Array) {\n        this.componentsError = false;\n        this.storeComponents = components.map((component) => new Component(component));\n      } else if (components instanceof Error) {\n        this.componentsError = components;\n      }\n\n      this.timeout(() => {\n        this.refreshClusterComponents();\n      }, this.refreshRate);\n    });\n  }\n\n  getAllServices() {\n    return this.cluster.getServices().then((services) => {\n      this.storeServices = services.map((service) => new Service(service));\n    });\n  }\n\n  getClusterJobs() {\n    return this.cluster.getJobs().then((jobs) => {\n      this.storeJobs = jobs.map((job) => new Job(job));\n    });\n  }\n\n  getClusterCronJobs() {\n    return this.cluster.getCronJobs().then((cronjobs) => {\n      this.storeCronJobs = cronjobs.map((cronjob) => new Cronjob(cronjob));\n    });\n  }\n\n  refreshJobs() {\n    return this.cluster.getJobs().then((newJobs) => {\n      this.storeJobs\n        .filter((job) => {\n          return !job.is_deleted;\n        })\n        .forEach((issetJob) => {\n          let equalPod = newJobs.filter((item) => {\n            return item.metadata.uid === issetJob.data.metadata.uid;\n          });\n          if (equalPod.length > 0) {\n            equalPod = equalPod[0];\n          } else {\n            equalPod = false;\n          }\n\n          if (equalPod !== false) {\n            issetJob.update(equalPod);\n            newJobs.splice(newJobs.indexOf(equalPod), 1);\n          } else {\n            issetJob.destroy();\n          }\n        });\n      newJobs = newJobs.map((newJob) => new Job(newJob));\n      this.storeJobs = this.storeJobs.concat(newJobs);\n    });\n  }\n\n  __getNamespace(namespace) {\n    return this.namespaceMap.filter((ns) => {\n      return ns.name === namespace;\n    })[0];\n  }\n\n  __setRefreshRate(rate) {\n    if (rate === undefined) {\n      this.refreshRate = REFRESH_RATE_DEFAULT;\n    } else {\n      this.refreshRate = rate * 1000;\n    }\n  }\n\n  __getPodsLength(pods = []) {\n    return pods.filter((item) => !item.is_deleted).length;\n  }\n\n  getWarningPods() {\n    let warningPods = this.storePods.filter((item) => this.podIsWarning(item));\n    if (warningPods.length > 0 && warningPods.filter((pod) => pod.message === 'Undefined error').length > 0) {\n      this.storePods.forEach((pod, index) => {\n        if (this.podIsWarning(pod) && pod.message === 'Undefined error' && this.storeEvents) {\n          const event = this.storeEvents.find((event) => event.involvedObject.name === pod.name);\n          if (event !== undefined) {\n            this.storePods[index].message = event.message;\n          }\n        }\n      });\n    }\n\n    return this.sortByStatus(warningPods);\n  }\n\n  sortByStatus(array: Array<{ status: number }>, rule = [ERROR, WARNING, SUCCESS, SUCCEEDED, TERMINATING]): any[] {\n    const sorted = [];\n\n    rule.forEach((status) => {\n      sorted.push(...array.filter((pod) => pod.status === status));\n    });\n\n    return sorted;\n  }\n\n  getWarningNodes() {\n    return this.nodesMap.filter((item) => item.status === ERROR);\n  }\n\n  goTo(id) {\n    let pod = null;\n    if (id) {\n      pod = document.getElementsByClassName(id)[0];\n    }\n    if (pod) {\n      pod.scrollIntoView({ block: 'center', behavior: 'smooth' });\n    }\n  }\n\n  getAlertsNodesByCPU(status: 'cpuStatus' | 'cpuStatusRequested' = 'cpuStatus') {\n    return this.nodesMap.filter((item) => item[status] === WARNING || item[status] === ERROR);\n  }\n\n  getAlertsNodesByMemory(status: 'memoryStatus' | 'memoryStatusRequested' = 'memoryStatus') {\n    return this.nodesMap.filter((item) => item[status] === WARNING || item[status] === ERROR);\n  }\n\n  getAlertsNodesByPods(status: 'podsStatus' = 'podsStatus') {\n    return this.nodesMap.filter((item) => item[status] === WARNING || item[status] === ERROR);\n  }\n\n  getAlertsComponents() {\n    return this.storeComponents.filter((item) => item.status === ERROR);\n  }\n\n  getEvents() {\n    this.cluster.getEvents().then((events) => {\n      this.storeEvents = events;\n\n      this.timeout(() => {\n        this.getEvents();\n      }, this.refreshRate);\n    });\n  }\n\n  podIsWarning(pod: Pod): boolean {\n    if (!pod.is_deleted) {\n      if (pod.status === WARNING || pod.status === ERROR || pod.status === TERMINATING) {\n        return true;\n      }\n      return !this.validResources(pod);\n    }\n    return false;\n  }\n\n  validResources(pod: Pod): boolean {\n    return pod.data.spec.containers.every((container) => {\n      const msgCpu = [];\n      const msgMemory = [];\n\n      if (pod.data.metadata.namespace !== 'kube-system' && pod.status !== SUCCEEDED) {\n        if (!container.resources.requests || !container.resources.requests.cpu) {\n          msgCpu.push('CPU request');\n        }\n        if (!container.resources.limits || !container.resources.limits.cpu) {\n          msgCpu.push('CPU limit');\n        }\n        if (!container.resources.requests || !container.resources.requests.memory) {\n          msgMemory.push('Memory request');\n        }\n        if (!container.resources.limits || !container.resources.limits.memory) {\n          msgMemory.push('Memory limit');\n        }\n      }\n\n      if (msgCpu.length > 0 || msgMemory.length > 0) {\n        pod.message = `Container \"${container.name}\":\n                 ${msgCpu.length && 'Specify ' + msgCpu.join(' and ') + ';'}\n                 ${msgMemory.length && 'Specify ' + msgMemory.join(' and ') + ';'}`;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  toggleMenu() {\n    this.showMenu = !this.showMenu;\n  }\n}\n","import store from '../../common/store';\n\nimport { K8sPage } from '../k8s-page';\nimport { __getGrafanaVersion } from '../../common/helpers';\n\nexport class ApplicationsOverview extends K8sPage {\n  static $inject = [\n    '$scope',\n    '$injector',\n    '$q',\n    'backendSrv',\n    'datasourceSrv',\n    'contextSrv',\n    '$location',\n    '$timeout',\n    '$window',\n  ];\n  static templateUrl = 'components/applications-overview/applications-overview.html';\n  columnNames: Array<{\n    colName: string;\n    nsKey: string;\n  }>;\n  hideAllWarningPods: boolean;\n  version: number;\n  open: { [key: string]: boolean };\n  storageOpenKey = 'application-overview-open';\n  showColumn: { [key: string]: { [key: string]: boolean } };\n  storageShowColumnKey = 'application-overview-show-column';\n  showScrollButton = false;\n\n  constructor(\n    $scope,\n    $injector,\n    public $q,\n    public backendSrv,\n    public datasourceSrv,\n    public contextSrv,\n    public $location,\n    public $timeout,\n    private $window\n  ) {\n    super($scope, backendSrv, datasourceSrv, contextSrv, $location, $timeout, $q, $window);\n    this.pageReady = false;\n    this.version = __getGrafanaVersion($window);\n\n    this.__prepareDS().then(() => {\n      this.getEvents();\n      this.getClusterComponents();\n      this.getNamespaceMap();\n    });\n\n    this.columnNames = [\n      {\n        colName: 'Deployments',\n        nsKey: 'deployments',\n      },\n      {\n        colName: 'Statefulsets',\n        nsKey: 'statefulsets',\n      },\n      {\n        colName: 'Daemonsets',\n        nsKey: 'daemonsets',\n      },\n      {\n        colName: 'Other pods',\n        nsKey: 'other',\n      },\n      {\n        colName: 'Cron Jobs',\n        nsKey: 'cronJobs',\n      },\n      {\n        colName: 'Jobs',\n        nsKey: 'jobs',\n      },\n    ];\n    this.hideAllWarningPods = true;\n\n    const openFromStorage = localStorage.getItem(this.storageOpenKey);\n    this.open = openFromStorage ? JSON.parse(openFromStorage) : {};\n\n    const showColumnFromStorage = localStorage.getItem(this.storageShowColumnKey);\n    this.showColumn = showColumnFromStorage ? JSON.parse(showColumnFromStorage) : { cronJobs: {}, jobs: {}, other: {} };\n    if (typeof this.showColumn.other === 'undefined') {\n      this.showColumn.other = {};\n    }\n\n    const elem = document.querySelector('.scroll-canvas');\n    elem.addEventListener('scroll', () => {\n      this.showScrollButton = elem.scrollTop > 64;\n      $scope.$apply();\n    });\n  }\n\n  __showAll() {\n    this.toggleNamespace(true);\n  }\n\n  __hideAll() {\n    this.toggleNamespace(false);\n  }\n\n  namespaceClick(event, namespace) {\n    if (event.ctrlKey || event.metaKey) {\n      if (namespace.open) {\n        event.preventDefault();\n      }\n      this.toggleNamespace(namespace);\n    } else {\n      namespace.toggle();\n    }\n  }\n\n  toggleNamespace(namespace: boolean | any) {\n    store.delete('namespaceStore');\n    let namespaceStore = [];\n    this.namespaceMap.map((ns) => {\n      ns.open = namespace === true || namespace === false ? namespace : namespace.name === ns.name;\n      namespaceStore.push({ name: ns.name, open: ns.open });\n    });\n    store.setObject('namespaceStore', namespaceStore);\n  }\n\n  updatePods(newPods): void {\n    this.refreshNamespaceMap();\n  }\n\n  toggleAllWarningPods() {\n    this.hideAllWarningPods = !this.hideAllWarningPods;\n  }\n\n  namespaceFilterIsDeleted(namespaces) {\n    return namespaces.filter((item) => item.is_deleted === false || typeof item.is_deleted === 'undefined');\n  }\n\n  namespaceCount(): number {\n    return this.namespaceMap ? this.namespaceMap.length : 0;\n  }\n\n  namespaceActiveCount(): number {\n    return this.namespaceMap ? this.namespaceMap.filter((namespace) => namespace.open).length : 0;\n  }\n\n  toggleTab(namespace: string): void {\n    if (this.open[namespace] === undefined) {\n      this.open[namespace] = false;\n    } else {\n      this.open[namespace] = !this.open[namespace];\n    }\n    localStorage.setItem(this.storageOpenKey, JSON.stringify(this.open));\n  }\n\n  toggleColumn(columnName: string, namespace: string): void {\n    if (this.showColumn[columnName][namespace] === undefined) {\n      this.showColumn[columnName][namespace] = true;\n    } else {\n      this.showColumn[columnName][namespace] = !this.showColumn[columnName][namespace];\n    }\n    localStorage.setItem(this.storageShowColumnKey, JSON.stringify(this.showColumn));\n  }\n\n  showCheck(columnName: string, namespace: string): boolean {\n    return (\n      (columnName !== 'jobs' && columnName !== 'cronJobs' && columnName !== 'other') ||\n      (this.showColumn[columnName][namespace] !== undefined && this.showColumn[columnName][namespace] !== false)\n    );\n  }\n}\n","import appEvents from 'grafana/app/core/app_events';\nimport { __getGrafanaVersion } from '../../common/helpers';\n\nexport class ClustersList {\n  static $inject = ['$scope', '$injector', 'backendSrv', 'datasourceSrv', 'contextSrv', 'utilSrv', '$window'];\n  static templateUrl = 'components/clusters-list/clusters-list.html';\n  isReady: boolean;\n  clusters: any[];\n  $scope: any;\n  isAdmin: boolean;\n  version: number;\n  showScrollButton = false;\n\n  constructor(\n    $scope,\n    $injector,\n    private backendSrv,\n    private datasourceSrv,\n    private contextSrv,\n    private utilSrv,\n    private $window\n  ) {\n    this.isReady = false;\n    this.$scope = $scope;\n    this.version = __getGrafanaVersion($window);\n    document.title = 'DevOpsProdigy KubeGraf';\n\n    try {\n      this.getClusters().then(() => {\n        this.isReady = true;\n        this.$scope.$apply();\n      });\n    } catch (e) {\n      console.error(e);\n    }\n\n    try {\n      this.isAdmin = this.contextSrv.hasRole('Admin');\n    } catch (e) {\n      console.error(e);\n      this.isAdmin = false;\n    }\n\n    const elem = document.querySelector('.scroll-canvas');\n    elem.addEventListener('scroll', () => {\n      this.showScrollButton = elem.scrollTop > 64;\n      $scope.$apply();\n    });\n  }\n\n  async getClusters() {\n    const datasources = await this.datasourceSrv.getAll();\n    const type = 'devopsprodidy-kubegraf-datasource';\n\n    if (Array.isArray(datasources)) {\n      this.clusters = datasources.filter((item) => {\n        return item.type === type;\n      });\n    } else {\n      let clusters = [];\n      Object.keys(datasources).forEach((key) => {\n        if (datasources[key].type === type) {\n          clusters.push(datasources[key]);\n        }\n      });\n      this.clusters = clusters;\n    }\n  }\n\n  deleteCluster(cluster) {\n    appEvents.emit('confirm-modal', {\n      title: 'Delete',\n      text: 'Are you sure you want to delete this cluster?',\n      yesText: 'Delete',\n      icon: 'fa-trash',\n      onConfirm: () => {\n        this.confirmDelete(cluster.id);\n      },\n    });\n  }\n\n  confirmDelete(id) {\n    this.backendSrv.delete('/api/datasources/' + id).then(() => {\n      this.clusters = this.clusters.filter((item) => {\n        return item.id !== id;\n      });\n      this.$scope.$apply();\n    });\n  }\n}\n","import appEvents from 'grafana/app/core/app_events';\nimport { TYPE_PROMETHEUS } from '../../common/constants';\nimport { __getGrafanaVersion } from '../../common/helpers';\n\nexport class ClusterConfig {\n  static templateUrl = 'components/cluster-config/cluster-config.html';\n  static $inject = ['$scope', '$injector', 'backendSrv', 'datasourceSrv', 'alertSrv', '$q', '$location', '$window'];\n  cluster: any;\n  prometheusList: any[];\n  busy: boolean;\n  $scope: any;\n  pageReady: boolean;\n  version: number;\n  retry = 3;\n\n  constructor(\n    $scope,\n    $injector,\n    private backendSrv,\n    private datasourceSrv,\n    private alertSrv,\n    private $q,\n    private $location,\n    private $window\n  ) {\n    this.pageReady = false;\n    this.$scope = $scope;\n    this.busy = false;\n    this.version = __getGrafanaVersion($window);\n\n    this.getCluster().finally(() => {\n      this.pageReady = true;\n      this.$scope.$apply();\n    });\n  }\n\n  async getCluster(): Promise<void> {\n    if ('clusterId' in this.$location.search()) {\n      await this.getDatasource(this.$location.search().clusterId);\n      document.title = 'DevOpsProdigy KubeGraf | Edit cluster';\n    } else {\n      this.cluster = {\n        type: 'devopsprodidy-kubegraf-datasource',\n        access: 'proxy',\n        jsonData: {\n          refresh_pods_rate: '60',\n          access_via_token: false,\n          prom_name: '',\n        },\n      };\n      document.title = 'DevOpsProdigy KubeGraf | New cluster';\n    }\n\n    await this.getPrometheusList();\n  }\n\n  getPrometheusList() {\n    return this.backendSrv.get('/api/datasources').then((datasources) => {\n      this.prometheusList = datasources.filter((item) => {\n        return item.type === TYPE_PROMETHEUS;\n      });\n      let defProm = this.prometheusList.filter((item) => item.isDefault);\n      if (defProm.length > 0 && this.cluster.jsonData.prom_name === '') {\n        this.cluster.jsonData.prom_name = defProm[0].name;\n      }\n    });\n  }\n\n  saveCluster() {\n    if (this.busy) {\n      return;\n    }\n    this.busy = true;\n    this.cluster.jsonData.cluster_url = this.cluster.url;\n\n    return this.saveDatasource()\n      .then((res) => {\n        if (res && res.datasource) {\n          this.cluster = res.datasource;\n          this.testCluster();\n        }\n      })\n      .finally(() => {\n        this.busy = false;\n      });\n  }\n\n  check(): boolean {\n    return !this.pageReady ? false : this.$scope.clusterForm.$valid;\n  }\n\n  saveDatasource() {\n    return this.cluster.id ? this.updateDatasource() : this.createDatasource();\n  }\n\n  createDatasource() {\n    return this.backendSrv.post('/api/datasources', this.cluster).then(\n      (res) => {\n        return this.$q.resolve(res);\n      },\n      (err) => {\n        return this.$q.reject(err);\n      }\n    );\n  }\n\n  updateDatasource() {\n    return this.backendSrv.put('/api/datasources/' + this.cluster.id, this.cluster).then(\n      (res) => {\n        return this.$q.resolve(res);\n      },\n      (err) => {\n        return this.$q.reject(err);\n      }\n    );\n  }\n\n  getDatasource(id) {\n    return this.backendSrv.get('/api/datasources/' + id).then((result) => {\n      if (!result.jsonData.prom_name) {\n        result.jsonData.prom_name = '';\n      }\n\n      if (!result.jsonData.refresh_pods_rate) {\n        result.jsonData.refresh_pods_rate = '60';\n      }\n\n      this.cluster = result;\n    });\n  }\n\n  testCluster() {\n    let url = '/api/v1/namespaces';\n    let _url = '/api/datasources/proxy/' + this.cluster.id;\n    if (this.cluster.jsonData.access_via_token) {\n      _url += '/__proxy';\n    }\n    _url += url;\n    this.backendSrv\n      .datasourceRequest({\n        url: _url,\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n      })\n      .then(\n        (response) => {\n          if (response && response.status === 200) {\n            setTimeout(() => {\n              window.history.back();\n            }, 800);\n          } else {\n            appEvents.emit('alert-error', ['Unhandled error']);\n          }\n        },\n        (error) => {\n          if (error && error.status && error.statusText) {\n            appEvents.emit('alert-error', [error.status + ' ' + error.statusText]);\n          } else {\n            appEvents.emit('alert-error', ['Unhandled error']);\n          }\n        }\n      );\n  }\n}\n","export class ClusterOverview {\n  static $inject = ['$location'];\n  constructor($location) {\n    const cluster = $location.search().clusterName;\n    if (cluster) {\n      window.location.href = 'plugins/devopsprodigy-kubegraf-app/page/applications-overview?clusterName=' + cluster;\n    }\n  }\n}\n","import { K8sPage } from '../k8s-page';\nimport { Node } from '../../common/types/node';\nimport store from '../../common/store';\nimport { __convertToGB, __roundCpu, __convertToMicro, __getGrafanaVersion } from '../../common/helpers';\nimport { Pod } from '../../common/types/pod';\n\nexport class NodesOverview extends K8sPage {\n  static templateUrl = 'components/nodes-overview/nodes-overview.html';\n  static $inject = [\n    '$scope',\n    '$injector',\n    '$q',\n    'backendSrv',\n    'datasourceSrv',\n    'contextSrv',\n    '$location',\n    '$timeout',\n    '$window',\n  ];\n  version: number;\n  open: { [key: string]: boolean };\n  storageOpenKey = 'nodes-overview-open';\n  serverInfo: any = null;\n  hideAllWarningPods = true;\n  showScrollButton = false;\n\n  constructor(\n    $scope,\n    $injector,\n    public $q,\n    public backendSrv,\n    public datasourceSrv,\n    public contextSrv,\n    public $location,\n    public $timeout,\n    private $window\n  ) {\n    super($scope, backendSrv, datasourceSrv, contextSrv, $location, $timeout, $q, $window);\n    this.pageReady = false;\n    this.version = __getGrafanaVersion($window);\n\n    this.__prepareDS().then(() => {\n      this.getEvents();\n      this.getNodeMap()\n        .then(() => {\n          if (this.nodesMap.length > 0 && this.serverInfo === null) {\n            this.getServerInfo();\n          }\n          this.pageReady = true;\n        })\n        .then(() => {\n          this.getResourcesMetrics().then(() => {});\n        });\n    });\n\n    const openFromStorage = localStorage.getItem(this.storageOpenKey);\n    this.open = openFromStorage ? JSON.parse(openFromStorage) : {};\n\n    const elem = document.querySelector('.scroll-canvas');\n    elem.addEventListener('scroll', () => {\n      this.showScrollButton = elem.scrollTop > 64;\n      $scope.$apply();\n    });\n  }\n\n  getServerInfo() {\n    this.serverInfo = {};\n    this.__getServersInfo(this.nodesMap).then((res) => {\n      this.serverInfo = res;\n    });\n  }\n\n  showAllPodsNS(ns) {\n    ns.limit = false;\n  }\n\n  toggleNsList(node) {\n    node.hideNs = !node.hideNs;\n\n    /*let key = node.name + 'NsList';\n        let state = store.get(key);\n\n        if (state === 'false') {\n            state = false;\n        } else if (state === 'true') {\n            state = true;\n        }\n\n        store.set(key, !state);*/\n  }\n\n  updatePods(newPods: Pod[]): void {\n    this.insertPodsToNodesMap(newPods);\n  }\n\n  summary(ns, metric) {\n    let res = 0;\n\n    if (ns.pods) {\n      res = ns.pods.reduce((prevValue, pod) => {\n        if (pod.sourceMetrics[metric]) {\n          return prevValue + pod.sourceMetrics[metric];\n        }\n        return prevValue;\n      }, 0);\n    }\n\n    switch (metric) {\n      case 'cpuUsed':\n        return __convertToMicro(res.toFixed(3));\n      case 'cpuRequested':\n        return __convertToMicro(__roundCpu(res));\n      case 'cpuLimit':\n        return __convertToMicro(__roundCpu(res));\n      case 'memoryUsed':\n        return __convertToGB(res);\n      case 'memoryRequested':\n        return __convertToGB(res);\n      case 'memoryLimit':\n        return __convertToGB(res);\n      default:\n        return 'N-A';\n    }\n  }\n\n  nodeClick(event, node) {\n    if (event.ctrlKey) {\n      if (node.open) {\n        event.preventDefault();\n      }\n      this.toggleNodes(node);\n    } else {\n      node.toggle();\n    }\n  }\n\n  __showAll() {\n    this.toggleNodes(true);\n  }\n\n  __hideAll() {\n    this.toggleNodes(false);\n  }\n\n  toggleNodes(node: boolean | any) {\n    store.delete('nodeStore');\n    let nodeStore = [];\n    this.nodesMap.map((ns) => {\n      ns.open = node === true || node === false ? node : node.name === ns.name;\n      nodeStore.push({ name: ns.name, open: ns.open });\n    });\n    store.setObject('nodeStore', nodeStore);\n  }\n\n  podsFilterIsDeleted(pods: Pod[]) {\n    return pods.filter((pod) => pod.is_deleted === false);\n  }\n\n  sort(key, nsIndex, nodeIndex) {\n    if (this.nodesMap[nodeIndex] && this.nodesMap[nodeIndex].namespaces[nsIndex]) {\n      if (this.nodesMap[nodeIndex].namespaces[nsIndex].sort.indexOf(key) === 0) {\n        this.nodesMap[nodeIndex].namespaces[nsIndex].sort = '-' + key;\n      } else {\n        this.nodesMap[nodeIndex].namespaces[nsIndex].sort = key;\n      }\n    }\n  }\n\n  icon(key, nsIndex, nodeIndex) {\n    if (this.nodesMap[nodeIndex] && this.nodesMap[nodeIndex].namespaces[nsIndex]) {\n      if (this.nodesMap[nodeIndex].namespaces[nsIndex].sort.indexOf(key) === 0) {\n        return '<i class=\"fa fa-long-arrow-down\"></i>';\n      } else if (this.nodesMap[nodeIndex].namespaces[nsIndex].sort.indexOf('-' + key) === 0) {\n        return '<i class=\"fa fa-long-arrow-up\"></i>';\n      }\n    }\n    return '<i class=\"fa fa-long-arrow-up grey\"></i>';\n  }\n\n  toggleAllWarningPods() {\n    this.hideAllWarningPods = !this.hideAllWarningPods;\n  }\n\n  nodeCount(): number {\n    return this.nodesMap ? this.nodesMap.length : 0;\n  }\n\n  nodeActiveCount(): number {\n    return this.nodesMap ? this.nodesMap.filter((node) => node.open).length : 0;\n  }\n\n  toggleTab(nodeName: string): void {\n    if (this.open[nodeName] === undefined) {\n      this.open[nodeName] = false;\n    } else {\n      this.open[nodeName] = !this.open[nodeName];\n    }\n    localStorage.setItem(this.storageOpenKey, JSON.stringify(this.open));\n  }\n}\n","import { K8sPage } from '../k8s-page';\nimport { __getGrafanaVersion } from '../../common/helpers';\nimport { COLOR_GREEN, COLOR_RED, COLOR_YELLOW, ERROR, WARNING } from '../../common/constants';\n\nexport class ClusterAlerts extends K8sPage {\n  static templateUrl = 'components/cluster-alerts/cluster-alerts.html';\n  static $inject = [\n    '$scope',\n    '$injector',\n    '$q',\n    'backendSrv',\n    'datasourceSrv',\n    'contextSrv',\n    '$location',\n    '$timeout',\n    '$window',\n  ];\n  version: number;\n  showScrollButton = false;\n\n  constructor(\n    $scope,\n    $injector,\n    public $q,\n    public backendSrv,\n    public datasourceSrv,\n    public contextSrv,\n    public $location,\n    public $timeout,\n    private $window\n  ) {\n    super($scope, backendSrv, datasourceSrv, contextSrv, $location, $timeout, $q, $window);\n    this.pageReady = false;\n    this.version = __getGrafanaVersion($window);\n\n    this.__prepareDS().then(() => {\n      let _promises = [];\n\n      _promises.push(this.getEvents());\n      _promises.push(this.getPods());\n      _promises.push(this.getClusterComponents());\n      _promises.push(\n        this.getNodeMap(true).then(() => {\n          this.getResourcesMetrics().then(() => {\n            this.nodesMapReady = true;\n          });\n        })\n      );\n\n      this.$q.all(_promises).then(() => {\n        this.pageReady = true;\n      });\n    });\n\n    const elem = document.querySelector('.scroll-canvas');\n    elem.addEventListener('scroll', () => {\n      this.showScrollButton = elem.scrollTop > 64;\n      $scope.$apply();\n    });\n  }\n  getAlertsNodesByCPU2(status: 'cpuStatus' | 'cpuStatusRequested' = 'cpuStatus') {}\n\n  getAlertsNodesByResources(): any[] {\n    return this.nodesMap\n      .filter(this.resourceProblem)\n      .map((node: any) => {\n        if (\n          node.cpuStatus === ERROR ||\n          node.cpuStatusRequested === ERROR ||\n          node.memoryStatus === ERROR ||\n          node.memoryStatusRequested === ERROR ||\n          node.podsStatus === ERROR\n        ) {\n          node.statusColor = COLOR_RED;\n          node.statusForSort = ERROR;\n        } else {\n          node.statusColor = COLOR_YELLOW;\n          node.statusForSort = WARNING;\n        }\n        node.statusMessage = this.nodeMessages(node).join(';<br/>');\n        return node;\n      })\n      .sort((a, b) => b.statusForSort - a.statusForSort);\n  }\n\n  clusterProblem() {\n    const warnings = [\n      this.getWarningNodes().length === 0,\n      this.getAlertsNodesByCPU().length === 0,\n      this.getAlertsNodesByMemory().length === 0,\n      this.getAlertsNodesByPods().length === 0,\n      this.getAlertsNodesByCPU('cpuStatusRequested').length === 0,\n      this.getAlertsNodesByMemory('memoryStatusRequested').length === 0,\n      this.getWarningPods().length === 0,\n      this.getAlertsComponents.length === 0,\n    ];\n\n    return this.nodesError || this.componentsError || this.podsError || warnings.some((w) => w !== true);\n  }\n\n  resourceProblem(node): boolean {\n    return (\n      node.cpuStatus === WARNING ||\n      node.cpuStatus === ERROR ||\n      node.cpuStatusRequested === ERROR ||\n      node.cpuStatusRequested === WARNING ||\n      node.memoryStatus === ERROR ||\n      node.memoryStatus === WARNING ||\n      node.memoryStatusRequested === ERROR ||\n      node.memoryStatusRequested === WARNING ||\n      node.podsStatus === WARNING ||\n      node.podsStatus === ERROR\n    );\n  }\n\n  nodeMessages(node): string[] {\n    const messages: string[] = [];\n    if (node.cpuStatus === ERROR || node.cpuStatus === WARNING) {\n      messages.push(`CPU used: ${node.cpuPercentUsed}`);\n    }\n    if (node.cpuStatusRequested === ERROR || node.cpuStatusRequested === WARNING) {\n      messages.push(`CPU requested: ${node.cpuPercentRequested}`);\n    }\n    if (node.memoryStatus === ERROR || node.memoryStatus === WARNING) {\n      messages.push(`Memory used: ${node.memoryPercentUsed}`);\n    }\n    if (node.memoryStatusRequested === ERROR || node.memoryStatusRequested === WARNING) {\n      messages.push(`Memory requested: ${node.memoryPercentUsed}`);\n    }\n    if (node.podsStatus === ERROR || node.podsStatus === WARNING) {\n      messages.push(`Pods count used: ${node.podsPercentUsed}`);\n    }\n    return messages;\n  }\n}\n","export class DOPKubeGrafAppConfig {\n  static templateUrl = 'config/config.html';\n  static $inject = ['$scope', '$injector', '$q'];\n  enabled: boolean;\n  appModel: any;\n  appEditCtrl: any;\n\n  constructor($scope, $injector, private $q) {\n    this.enabled = false;\n    this.appEditCtrl.setPostUpdateHook();\n  }\n\n  postUpdate() {\n    if (!this.appModel.enabled) {\n      return this.$q.resolve();\n    }\n    return this.appEditCtrl.importDashboards().then(() => {\n      this.enabled = true;\n      return {\n        url: 'plugins/devopsprodigy-kubegraf-app/page/clusters',\n        message: 'DevOpsProdigy KubeGraf enabled!',\n      };\n    });\n  }\n}\n","import { loadPluginCss } from '@grafana/runtime';\nimport { ApplicationsOverview } from './components/applications-overview/applications-overview';\nimport { ClustersList } from './components/clusters-list/clusters-list';\nimport { ClusterConfig } from './components/cluster-config/cluster-config';\nimport { ClusterOverview } from './components/cluster-overview/cluster-overview';\nimport { NodesOverview } from './components/nodes-overview/nodes-overview';\nimport { ClusterAlerts } from './components/cluster-alerts/cluster-alerts';\nimport { DOPKubeGrafAppConfig } from './config/config';\n\nloadPluginCss({\n  dark: 'plugins/devopsprodigy-kubegraf-app/styles/dark.css',\n  light: 'plugins/devopsprodigy-kubegraf-app/styles/light.css',\n});\n\nexport {\n  ApplicationsOverview,\n  ClusterAlerts,\n  ClusterConfig,\n  ClusterOverview,\n  ClustersList,\n  NodesOverview,\n  DOPKubeGrafAppConfig as ConfigCtrl,\n};\n"],"sourceRoot":""}